crystal_doc_search_index_callback({"repository_name":"avltree","body":"# AVLTree\n\n[![GitHub release](https://img.shields.io/github/release/ngng628/avltree.svg)](https://github.com/ngng628/avltree/releases) [![License: MIT](https://img.shields.io/badge/License-MIT-red.svg)](https://opensource.org/licenses/MIT)\n\n\nAn implement of `SortedSet`, `SortedMap` and `SortedMultiset` using [AVL tree](https://en.wikipedia.org/wiki/AVL_tree).\n\nEach method is implemented to be as compliant as possible with the standard `Set` and `Hash` in the Crystal language.\n\n## :arrow_down: Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     avltree:\n       github: ngng628/avltree\n   ```\n\n2. Run `shards install`\n\n## :pencil2: Usage\n\n```crystal\nrequire \"avltree\"\n```\n\n## :bulb: Sample\n\nIf you want more details, please refer to the API documentation.\n\n```crystal\nset = AVLTree::SortedSet(Int32).new\nset << 3 << 1 << 4 << 1 << 5 << 9\n\nset # => SortedSet{1, 3, 4, 5, 9}\n\nset[0] # => 1\nset[1] # => 3\nset[2] # => 4  (SortedSet#[k] returns the kth object)\n\nset.lower_bound(-1) # => 0\nset.lower_bound(2) # => 1\nset.lower_bound(3) # => 1\nset.lower_bound(9) # => 4\nset.lower_bound(10) # => 5\n\nset.delete(1)\nset # => SortedSet{3, 4, 5, 9}\n```\n\n```crystal\nmap = AVLTree::SortedMap(String, Int32).new\n\nmap[\"alice\"] = 10\nmap[\"alice\"] # => 10\nmap[\"carol\"] = 20\nmap[\"carol\"] # => 20\nmap[\"bob\"] = -10\nmap[\"bob\"] # => -10\n\nmap.at(0) # => {\"alice\", 10}\nmap.at(1) # => {\"bob\", -10}\nmap.at(2) # => {\"carol\", 20}  (at(k) returns the key-value pair to the kth key.)\n\nmap.lower_bound(\"a\") # => 0\nmap.lower_bound(\"bob\") # => 1\nmap.lower_bound(\"dave\") # => 3\n\nmap.delete(\"alice\")\nmap # {\"bob\" => -10, \"carol\" => 20}\nmap.delete_at(1)\nmap # {\"bob\" => -10}\n```\n\n```crystal\nmset = AVLTree::SortedMultiset(Int32).new\nmset << 3 << 1 << 4 << 1 << 5 << 9\n\nmset # => SortedMultiset{1, 1, 3, 4, 5, 9}\n\nmset[0] # => 1\nmset[1] # => 1\nmset[2] # => 3  (SortedMultiset#[k] returns the kth object)\n\nmset.lower_bound(-1) # => 0\nmset.lower_bound(2) # => 2\nmset.lower_bound(3) # => 2\nmset.lower_bound(9) # => 5\nmset.lower_bound(10) # => 6\n\nmset.delete(1)\nmset # => SortedMultiset{1, 3, 4, 5, 9}\n```\n\n\n## :busts_in_silhouette: Contributing\n\n1. Fork it (<https://github.com/ngng628/avltree/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am ':sparkles: Add some feature'`)\n   - Please follow the `.gitmessage` format for the commit message.\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## :desktop_computer: Contributors\n\n- [ngng628](https://github.com/ngng628) - creator and maintainer\n","program":{"html_id":"avltree/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"avltree","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"avltree/AVLTree","path":"AVLTree.html","kind":"module","full_name":"AVLTree","name":"AVLTree","abstract":false,"locations":[{"filename":"src/avltree/sorted_map.cr","line_number":1,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L1"},{"filename":"src/avltree/sorted_multimap.cr","line_number":1,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L1"},{"filename":"src/avltree/sorted_multiset.cr","line_number":3,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L3"},{"filename":"src/avltree/sorted_set.cr","line_number":3,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L3"}],"repository_name":"avltree","program":false,"enum":false,"alias":false,"const":false,"types":[{"html_id":"avltree/AVLTree/SortedMap","path":"AVLTree/SortedMap.html","kind":"class","full_name":"AVLTree::SortedMap(K, V)","name":"SortedMap","abstract":false,"superclass":{"html_id":"avltree/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avltree/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"avltree/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"avltree/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avltree/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avltree/sorted_map.cr","line_number":34,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L34"}],"repository_name":"avltree","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avltree/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"avltree/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"namespace":{"html_id":"avltree/AVLTree","kind":"module","full_name":"AVLTree","name":"AVLTree"},"doc":"`SortedMap` implements a associative array that guarantees that its keys are yielded in sorted order\n(according to the return keys of their #<=> methods) when iterating over them.\n\nSortedMap is implemented using an AVL tree.\n\nWhile it often has slower computational speed compared to a Hash implemented using a hash-based approach,\nit offers potential optimizations for operations related to order.\nFor example, retrieving the maximum and minimum keys of the map can be performed in logarithmic time.\n\n`SortedMap` does not allow duplicates and only stores unique keys.\n\n### Example\n\n```\nrequire \"avltree\"\n\nmap = AVLTree::SortedMap(String, Int32).new({\"bob\" => 3, \"alice\" => 1, \"carol\" => -2})\nmap.to_a == [{\"alice\", 1}, {\"bob\", 3}, {\"carol\", -2}] # => true\nmap.to_a == [{\"bob\", 3}, {\"alice\", 1}, {\"carol\", -2}] # => false\n\nmap[\"dave\"] = 4\nmap[\"oscar\"] = 3\n\nmap # => {alice => 1, bob => 3, carol => -2, dave => 4, oscar => 3}\n\nmap.min # => {\"alice\", 1}  (O(logN))\nmap.max # => {\"oscar\", 3}  (O(logN))\n\nmap.lower_bound(\"a\")     # => 0  (O(logN))\nmap.lower_bound(\"bryan\") # => 2  (O(logN))\nmap.lower_bound(\"zoe\")   # => 5  (O(logN))\n```","summary":"<p><code><a href=\"../AVLTree/SortedMap.html\">SortedMap</a></code> implements a associative array that guarantees that its keys are yielded in sorted order (according to the return keys of their #&lt;=&gt; methods) when iterating over them.</p>","class_methods":[{"html_id":"zip(ary1:Array(K),ary2:Array(V))-class-method","name":"zip","abstract":false,"args":[{"name":"ary1","external_name":"ary1","restriction":"Array(K)"},{"name":"ary2","external_name":"ary2","restriction":"Array(V)"}],"args_string":"(ary1 : Array(K), ary2 : Array(V))","args_html":"(ary1 : Array(K), ary2 : Array(V))","location":{"filename":"src/avltree/sorted_map.cr","line_number":283,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L283"},"def":{"name":"zip","args":[{"name":"ary1","external_name":"ary1","restriction":"Array(K)"},{"name":"ary2","external_name":"ary2","restriction":"Array(V)"}],"visibility":"Public","body":"map = self.new\nary1.zip(ary2) do |key, value|\n  map[key] = value\nend\nmap\n"}}],"constructors":[{"html_id":"new(hash:Hash(K,V))-class-method","name":"new","abstract":false,"args":[{"name":"hash","external_name":"hash","restriction":"Hash(K, V)"}],"args_string":"(hash : Hash(K, V))","args_html":"(hash : Hash(K, V))","location":{"filename":"src/avltree/sorted_map.cr","line_number":275,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L275"},"def":{"name":"new","args":[{"name":"hash","external_name":"hash","restriction":"Hash(K, V)"}],"visibility":"Public","body":"map = self.new\nhash.each do |key, value|\n  map[key] = value\nend\nmap\n"}},{"html_id":"new(defalut_value:V)-class-method","name":"new","abstract":false,"args":[{"name":"defalut_value","external_name":"defalut_value","restriction":"V"}],"args_string":"(defalut_value : V)","args_html":"(defalut_value : V)","location":{"filename":"src/avltree/sorted_map.cr","line_number":258,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L258"},"def":{"name":"new","args":[{"name":"defalut_value","external_name":"defalut_value","restriction":"V"}],"visibility":"Public","body":"new do\n  default_value\nend"}},{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":270,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L270"},"def":{"name":"new","visibility":"Public","body":"_ = SortedMap(K, V).allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(&block:self,K->V)-class-method","name":"new","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":266,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L266"},"def":{"name":"new","yields":2,"block_arity":2,"block_arg":{"name":"block","external_name":"block","restriction":"(self, K -> V)"},"visibility":"Public","body":"new(block)"}}],"instance_methods":[{"html_id":"==(other:SortedMap):Bool-instance-method","name":"==","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"SortedMap"}],"args_string":"(other : SortedMap) : Bool","args_html":"(other : <a href=\"../AVLTree/SortedMap.html\">SortedMap</a>) : Bool","location":{"filename":"src/avltree/sorted_map.cr","line_number":291,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L291"},"def":{"name":"==","args":[{"name":"other","external_name":"other","restriction":"SortedMap"}],"return_type":"Bool","visibility":"Public","body":"if size == other.size\nelse\n  return false\nend\nother.unordered_each do |key, value|\n  node = find_node(@root, key)\n  if node.nil?\n    return false\n  end\n  if node.not_nil!.key != key\n    return false\n  end\n  if node.not_nil!.value != value\n    return false\n  end\nend\ntrue\n"}},{"html_id":"[](key:K):V-instance-method","name":"[]","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : V","args_html":"(key : K) : V","location":{"filename":"src/avltree/sorted_map.cr","line_number":321,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L321"},"def":{"name":"[]","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"V","visibility":"Public","body":"fetch(key) do\n  if (block = @block) && key.is_a?(K)\n    block.call(self, key.as(K))\n  else\n    raise(KeyError.new(\"Missing hash key: #{key.inspect}\"))\n  end\nend"}},{"html_id":"[]=(key:K,value:V):V-instance-method","name":"[]=","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"},{"name":"value","external_name":"value","restriction":"V"}],"args_string":"(key : K, value : V) : V","args_html":"(key : K, value : V) : V","location":{"filename":"src/avltree/sorted_map.cr","line_number":335,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L335"},"def":{"name":"[]=","args":[{"name":"key","external_name":"key","restriction":"K"},{"name":"value","external_name":"value","restriction":"V"}],"return_type":"V","visibility":"Public","body":"upsert(key, value)\nvalue\n"}},{"html_id":"[]?(key:K):V|Nil-instance-method","name":"[]?","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : V | Nil","args_html":"(key : K) : V | Nil","location":{"filename":"src/avltree/sorted_map.cr","line_number":331,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L331"},"def":{"name":"[]?","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"V | ::Nil","visibility":"Public","body":"fetch(key, nil)"}},{"html_id":"at(index:Int):Tuple(K,V)-instance-method","name":"at","doc":"Returns the key-value at the *index*-th.","summary":"<p>Returns the key-value at the <em>index</em>-th.</p>","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : Tuple(K, V)","args_html":"(index : Int) : Tuple(K, V)","location":{"filename":"src/avltree/sorted_map.cr","line_number":380,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L380"},"def":{"name":"at","args":[{"name":"index","external_name":"index","restriction":"Int"}],"return_type":"::Tuple(K, V)","visibility":"Public","body":"fetch_at(index) do\n  raise(IndexError.new)\nend"}},{"html_id":"at(index:Int,&)-instance-method","name":"at","doc":"Returns the key-value at the *index*-th.","summary":"<p>Returns the key-value at the <em>index</em>-th.</p>","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int, &)","args_html":"(index : Int, &)","location":{"filename":"src/avltree/sorted_map.cr","line_number":385,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L385"},"def":{"name":"at","args":[{"name":"index","external_name":"index","restriction":"Int"}],"yields":1,"block_arity":1,"visibility":"Public","body":"fetch_at(index) do |i|\n  yield i\nend"}},{"html_id":"at?(index:Int):Tuple(K,V)|Nil-instance-method","name":"at?","doc":"Like `at`, but returns `nil`\nif trying to access an key-value outside the set's range.","summary":"<p>Like <code><a href=\"../AVLTree/SortedMap.html#at%28index%3AInt%29%3ATuple%28K%2CV%29-instance-method\">#at</a></code>, but returns <code>nil</code> if trying to access an key-value outside the set's range.</p>","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : Tuple(K, V) | Nil","args_html":"(index : Int) : Tuple(K, V) | Nil","location":{"filename":"src/avltree/sorted_map.cr","line_number":391,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L391"},"def":{"name":"at?","args":[{"name":"index","external_name":"index","restriction":"Int"}],"return_type":"::Tuple(K, V) | ::Nil","visibility":"Public","body":"fetch_at(index) do\n  nil\nend"}},{"html_id":"clear:self-instance-method","name":"clear","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":459,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L459"},"def":{"name":"clear","return_type":"self","visibility":"Public","body":"@root = nil\nself\n"}},{"html_id":"clone-instance-method","name":"clone","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":302,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L302"},"def":{"name":"clone","visibility":"Public","body":"map = SortedMap(K, V).new\nunordered_each do |key, value|\n  map[key] = value.clone\nend\nmap\n"}},{"html_id":"compact-instance-method","name":"compact","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":464,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L464"},"def":{"name":"compact","visibility":"Public","body":"each_with_object(SortedMap(K, V).new) do |__arg2, memo|\n  key = __arg2[0]\n  value = __arg2[1]\n  if value.nil?\n  else\n    memo[key] = value\n  end\nend"}},{"html_id":"compact!:self-instance-method","name":"compact!","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":470,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L470"},"def":{"name":"compact!","return_type":"self","visibility":"Public","body":"reject! do |_, value|\n  value.nil?\nend"}},{"html_id":"delete(key:K):V|Nil-instance-method","name":"delete","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : V | Nil","args_html":"(key : K) : V | Nil","location":{"filename":"src/avltree/sorted_map.cr","line_number":491,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L491"},"def":{"name":"delete","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"V | ::Nil","visibility":"Public","body":"delete(key) do\n  nil\nend"}},{"html_id":"delete(key:K,&)-instance-method","name":"delete","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K, &)","args_html":"(key : K, &)","location":{"filename":"src/avltree/sorted_map.cr","line_number":495,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L495"},"def":{"name":"delete","args":[{"name":"key","external_name":"key","restriction":"K"}],"yields":1,"block_arity":1,"visibility":"Public","body":"entry = delete_impl(key)\nentry ? entry : yield key\n"}},{"html_id":"delete_at(index:Int,&)-instance-method","name":"delete_at","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int, &)","args_html":"(index : Int, &)","location":{"filename":"src/avltree/sorted_map.cr","line_number":500,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L500"},"def":{"name":"delete_at","args":[{"name":"index","external_name":"index","restriction":"Int"}],"yields":1,"block_arity":1,"visibility":"Public","body":"key = key_at(index)\ndelete(key) do\n  yield index\nend\n"}},{"html_id":"delete_at(index:Int)-instance-method","name":"delete_at","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int)","args_html":"(index : Int)","location":{"filename":"src/avltree/sorted_map.cr","line_number":505,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L505"},"def":{"name":"delete_at","args":[{"name":"index","external_name":"index","restriction":"Int"}],"visibility":"Public","body":"key = key_at(index)\ndelete(key)\n"}},{"html_id":"delete_at?(index:Int)-instance-method","name":"delete_at?","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int)","args_html":"(index : Int)","location":{"filename":"src/avltree/sorted_map.cr","line_number":510,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L510"},"def":{"name":"delete_at?","args":[{"name":"index","external_name":"index","restriction":"Int"}],"visibility":"Public","body":"key = key_at?(index)\nif key.nil?\n  return nil\nend\ndelete(key.not_nil!)\n"}},{"html_id":"dig(key:K)-instance-method","name":"dig","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K)","args_html":"(key : K)","location":{"filename":"src/avltree/sorted_map.cr","line_number":573,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L573"},"def":{"name":"dig","args":[{"name":"key","external_name":"key","restriction":"K"}],"visibility":"Public","body":"self[key]"}},{"html_id":"dig(key:K,*subkeys)-instance-method","name":"dig","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"},{"name":"subkeys","external_name":"subkeys","restriction":""}],"args_string":"(key : K, *subkeys)","args_html":"(key : K, *subkeys)","location":{"filename":"src/avltree/sorted_map.cr","line_number":566,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L566"},"def":{"name":"dig","args":[{"name":"key","external_name":"key","restriction":"K"},{"name":"subkeys","external_name":"subkeys","restriction":""}],"splat_index":1,"visibility":"Public","body":"if (value = self[key]) && (value.responds_to?(:dig))\n  return value.dig(*subkeys)\nend\nraise(KeyError.new(\"Hash value not diggable for key: #{key.inspect}\"))\n"}},{"html_id":"dig?(key:K)-instance-method","name":"dig?","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K)","args_html":"(key : K)","location":{"filename":"src/avltree/sorted_map.cr","line_number":584,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L584"},"def":{"name":"dig?","args":[{"name":"key","external_name":"key","restriction":"K"}],"visibility":"Public","body":"self[key]?"}},{"html_id":"dig?(key:K,*subkeys)-instance-method","name":"dig?","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"},{"name":"subkeys","external_name":"subkeys","restriction":""}],"args_string":"(key : K, *subkeys)","args_html":"(key : K, *subkeys)","location":{"filename":"src/avltree/sorted_map.cr","line_number":577,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L577"},"def":{"name":"dig?","args":[{"name":"key","external_name":"key","restriction":"K"},{"name":"subkeys","external_name":"subkeys","restriction":""}],"splat_index":1,"visibility":"Public","body":"if (value = self[key]?) && (value.responds_to?(:\"dig?\"))\n  return value.dig?(*subkeys)\nend\nnil\n"}},{"html_id":"dup-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nThis allocates a new object and copies the contents of\n`self` into it.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":310,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L310"},"def":{"name":"dup","visibility":"Public","body":"map = SortedMap(K, V).new\nmap.root = @root.dup\nmap.block = @block.dup\n"}},{"html_id":"each(&:Tuple(K,V)->):Nil-instance-method","name":"each","doc":"Must yield this collection's elements to the block.","summary":"<p>Must yield this collection's elements to the block.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":588,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L588"},"def":{"name":"each","yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(::Tuple(K, V) ->)"},"return_type":"Nil","visibility":"Public","body":"iter = ItemIterator(K, V).new(self)\niter.each do |key_and_value|\n  yield key_and_value\nend\n"}},{"html_id":"each-instance-method","name":"each","doc":"Must return an `Iterator` over the elements in this collection.","summary":"<p>Must return an <code>Iterator</code> over the elements in this collection.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":593,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L593"},"def":{"name":"each","visibility":"Public","body":"ItemIterator(K, V).new(self)"}},{"html_id":"each_key(&:K->):Nil-instance-method","name":"each_key","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":597,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L597"},"def":{"name":"each_key","yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(K ->)"},"return_type":"Nil","visibility":"Public","body":"iter = KeyIterator(K, V).new(self)\niter.each do |key|\n  yield key\nend\n"}},{"html_id":"each_key-instance-method","name":"each_key","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":602,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L602"},"def":{"name":"each_key","visibility":"Public","body":"KeyIterator(K, V).new(self)"}},{"html_id":"each_value(&:V->):Nil-instance-method","name":"each_value","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":606,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L606"},"def":{"name":"each_value","yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(V ->)"},"return_type":"Nil","visibility":"Public","body":"iter = ValueIterator(K, V).new(self)\niter.each do |value|\n  yield value\nend\n"}},{"html_id":"each_value-instance-method","name":"each_value","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":611,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L611"},"def":{"name":"each_value","visibility":"Public","body":"ValueIterator(K, V).new(self)"}},{"html_id":"empty?-instance-method","name":"empty?","doc":"Returns `true` if `self` is empty, `false` otherwise.\n\n```\n([] of Int32).empty? # => true\n([1]).empty?         # => false\n```","summary":"<p>Returns <code>true</code> if <code>self</code> is empty, <code>false</code> otherwise.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":862,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L862"},"def":{"name":"empty?","visibility":"Public","body":"@root.nil?"}},{"html_id":"fetch(key:K,default)-instance-method","name":"fetch","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"},{"name":"default","external_name":"default","restriction":""}],"args_string":"(key : K, default)","args_html":"(key : K, default)","location":{"filename":"src/avltree/sorted_map.cr","line_number":478,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L478"},"def":{"name":"fetch","args":[{"name":"key","external_name":"key","restriction":"K"},{"name":"default","external_name":"default","restriction":""}],"visibility":"Public","body":"fetch(key) do\n  default\nend"}},{"html_id":"fetch(key:K,&)-instance-method","name":"fetch","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K, &)","args_html":"(key : K, &)","location":{"filename":"src/avltree/sorted_map.cr","line_number":482,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L482"},"def":{"name":"fetch","args":[{"name":"key","external_name":"key","restriction":"K"}],"yields":1,"block_arity":1,"visibility":"Public","body":"node = find_node(@root, key)\nif node && (node.key == key)\n  node.value\nelse\n  yield key\nend\n"}},{"html_id":"fetch_at(index:Int,&)-instance-method","name":"fetch_at","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int, &)","args_html":"(index : Int, &)","location":{"filename":"src/avltree/sorted_map.cr","line_number":369,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L369"},"def":{"name":"fetch_at","args":[{"name":"index","external_name":"index","restriction":"Int"}],"yields":1,"block_arity":1,"visibility":"Public","body":"if index < 0\n  index = index + size\nend\nif 0 <= index && index < size\nelse\n  return yield index\nend\nunsafe_fetch(index)\n"}},{"html_id":"fetch_at(index:Int,default)-instance-method","name":"fetch_at","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"},{"name":"default","external_name":"default","restriction":""}],"args_string":"(index : Int, default)","args_html":"(index : Int, default)","location":{"filename":"src/avltree/sorted_map.cr","line_number":375,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L375"},"def":{"name":"fetch_at","args":[{"name":"index","external_name":"index","restriction":"Int"},{"name":"default","external_name":"default","restriction":""}],"visibility":"Public","body":"fetch_at(index) do\n  default\nend"}},{"html_id":"first_key:K-instance-method","name":"first_key","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":706,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L706"},"def":{"name":"first_key","return_type":"K","visibility":"Public","body":"node = first_node\nnode ? node.not_nil!.key : raise(\"Can't get first key of empty SortedMap\")\n"}},{"html_id":"first_key?:K|Nil-instance-method","name":"first_key?","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":711,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L711"},"def":{"name":"first_key?","return_type":"K | ::Nil","visibility":"Public","body":"node = first_node\nnode ? node.not_nil!.key : nil\n"}},{"html_id":"first_value:K-instance-method","name":"first_value","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":716,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L716"},"def":{"name":"first_value","return_type":"K","visibility":"Public","body":"node = first_node\nnode ? node.not_nil!.value : raise(\"Can't get first value of empty SortedMap\")\n"}},{"html_id":"first_value?:K|Nil-instance-method","name":"first_value?","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":721,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L721"},"def":{"name":"first_value?","return_type":"K | ::Nil","visibility":"Public","body":"node = first_node\nnode ? node.not_nil!.value : nil\n"}},{"html_id":"greater_equal_index(key:K):Int32|Nil-instance-method","name":"greater_equal_index","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Int32 | Nil","args_html":"(key : K) : Int32 | Nil","location":{"filename":"src/avltree/sorted_map.cr","line_number":818,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L818"},"def":{"name":"greater_equal_index","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"Int32 | ::Nil","visibility":"Public","body":"(greater_equal_item_with_index(key))[1]"}},{"html_id":"greater_equal_item(key:K):Tuple(K,V)|Nil-instance-method","name":"greater_equal_item","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Tuple(K, V) | Nil","args_html":"(key : K) : Tuple(K, V) | Nil","location":{"filename":"src/avltree/sorted_map.cr","line_number":814,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L814"},"def":{"name":"greater_equal_item","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"::Tuple(K, V) | ::Nil","visibility":"Public","body":"(greater_equal_item_with_index(key))[0]"}},{"html_id":"greater_equal_item_with_index(key:K):Tuple(Tuple(K,V)|Nil,Int32|Nil)-instance-method","name":"greater_equal_item_with_index","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Tuple(Tuple(K, V) | Nil, Int32 | Nil)","args_html":"(key : K) : Tuple(Tuple(K, V) | Nil, Int32 | Nil)","location":{"filename":"src/avltree/sorted_map.cr","line_number":809,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L809"},"def":{"name":"greater_equal_item_with_index","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"::Tuple(::Tuple(K, V) | ::Nil, Int32 | ::Nil)","visibility":"Public","body":"node, bound = lower_bound_impl(key)\nbound == size ? {nil, nil} : { {node.not_nil!.key, node.not_nil!.value}, bound }\n"}},{"html_id":"greater_index(key:K):Int32|Nil-instance-method","name":"greater_index","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Int32 | Nil","args_html":"(key : K) : Int32 | Nil","location":{"filename":"src/avltree/sorted_map.cr","line_number":805,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L805"},"def":{"name":"greater_index","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"Int32 | ::Nil","visibility":"Public","body":"(greater_item_with_index(key))[1]"}},{"html_id":"greater_item(key:K):Tuple(K,V)|Nil-instance-method","name":"greater_item","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Tuple(K, V) | Nil","args_html":"(key : K) : Tuple(K, V) | Nil","location":{"filename":"src/avltree/sorted_map.cr","line_number":801,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L801"},"def":{"name":"greater_item","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"::Tuple(K, V) | ::Nil","visibility":"Public","body":"(greater_item_with_index(key))[0]"}},{"html_id":"greater_item_with_index(key:K):Tuple(Tuple(K,V)|Nil,Int32|Nil)-instance-method","name":"greater_item_with_index","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Tuple(Tuple(K, V) | Nil, Int32 | Nil)","args_html":"(key : K) : Tuple(Tuple(K, V) | Nil, Int32 | Nil)","location":{"filename":"src/avltree/sorted_map.cr","line_number":796,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L796"},"def":{"name":"greater_item_with_index","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"::Tuple(::Tuple(K, V) | ::Nil, Int32 | ::Nil)","visibility":"Public","body":"node, bound = upper_bound_impl(key)\nbound == size ? {nil, nil} : { {node.not_nil!.key, node.not_nil!.value}, bound }\n"}},{"html_id":"has_key?(key:K):Bool-instance-method","name":"has_key?","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Bool","args_html":"(key : K) : Bool","location":{"filename":"src/avltree/sorted_map.cr","line_number":822,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L822"},"def":{"name":"has_key?","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"Bool","visibility":"Public","body":"if @root.nil?\n  return false\nend\nnode = find_node(@root, key)\nif (!node.nil?) && (node.key == key)\n  return true\nend\nfalse\n"}},{"html_id":"has_value?(value:V):Bool-instance-method","name":"has_value?","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"V"}],"args_string":"(value : V) : Bool","args_html":"(value : V) : Bool","location":{"filename":"src/avltree/sorted_map.cr","line_number":855,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L855"},"def":{"name":"has_value?","args":[{"name":"value","external_name":"value","restriction":"V"}],"return_type":"Bool","visibility":"Public","body":"each_value do |v|\n  if v == value\n    return true\n  end\nend\nfalse\n"}},{"html_id":"index(key:K):Int32|Nil-instance-method","name":"index","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Int32 | Nil","args_html":"(key : K) : Int32 | Nil","location":{"filename":"src/avltree/sorted_map.cr","line_number":845,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L845"},"def":{"name":"index","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"Int32 | ::Nil","visibility":"Public","body":"item, index = less_equal_item_with_index(key)\nindex && (item.not_nil![0] == key) ? index : nil\n"}},{"html_id":"index!(key:K):Int32-instance-method","name":"index!","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Int32","args_html":"(key : K) : Int32","location":{"filename":"src/avltree/sorted_map.cr","line_number":850,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L850"},"def":{"name":"index!","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"Int32","visibility":"Public","body":"item, index = less_equal_item_with_index(key)\nindex && (item.not_nil![0] == key) ? index.not_nil! : raise(Enumerable::NotFoundError.new)\n"}},{"html_id":"inspect(io:IO):Nil-instance-method","name":"inspect","doc":"Appends a String representation of this object\nwhich includes its class name, its object address\nand the values of all instance variables.\n\n```\nclass Person\n  def initialize(@name : String, @age : Int32)\n  end\nend\n\nPerson.new(\"John\", 32).inspect # => #<Person:0x10fd31f20 @name=\"John\", @age=32>\n```","summary":"<p>Appends a String representation of this object which includes its class name, its object address and the values of all instance variables.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/avltree/sorted_map.cr","line_number":866,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L866"},"def":{"name":"inspect","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"to_s(io)"}},{"html_id":"invert:SortedMap(V,K)-instance-method","name":"invert","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":436,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L436"},"def":{"name":"invert","return_type":"SortedMap(V, K)","visibility":"Public","body":"map = SortedMap(V, K)\neach do |key, value|\n  map[value] = key\nend\nmap\n"}},{"html_id":"key_at(index:Int):K-instance-method","name":"key_at","doc":"Returns the key at the *index*-th.","summary":"<p>Returns the key at the <em>index</em>-th.</p>","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : K","args_html":"(index : Int) : K","location":{"filename":"src/avltree/sorted_map.cr","line_number":396,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L396"},"def":{"name":"key_at","args":[{"name":"index","external_name":"index","restriction":"Int"}],"return_type":"K","visibility":"Public","body":"ret = fetch_at(index, nil)\nret ? ret.not_nil![0] : raise(IndexError.new)\n"}},{"html_id":"key_at?(index:Int):K|Nil-instance-method","name":"key_at?","doc":"Like `at`, but returns `nil`\nif trying to access an key outside the set's range.","summary":"<p>Like <code><a href=\"../AVLTree/SortedMap.html#at%28index%3AInt%29%3ATuple%28K%2CV%29-instance-method\">#at</a></code>, but returns <code>nil</code> if trying to access an key outside the set's range.</p>","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : K | Nil","args_html":"(index : Int) : K | Nil","location":{"filename":"src/avltree/sorted_map.cr","line_number":403,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L403"},"def":{"name":"key_at?","args":[{"name":"index","external_name":"index","restriction":"Int"}],"return_type":"K | ::Nil","visibility":"Public","body":"item = at?(index)\nitem ? item.not_nil![0] : nil\n"}},{"html_id":"key_for(value):K-instance-method","name":"key_for","abstract":false,"args":[{"name":"value","external_name":"value","restriction":""}],"args_string":"(value) : K","args_html":"(value) : K","location":{"filename":"src/avltree/sorted_map.cr","line_number":444,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L444"},"def":{"name":"key_for","args":[{"name":"value","external_name":"value","restriction":""}],"return_type":"K","visibility":"Public","body":"key_for(value) do\n  raise(KeyError.new(\"Missing hash key for value: #{value}\"))\nend"}},{"html_id":"key_for(value,&)-instance-method","name":"key_for","abstract":false,"args":[{"name":"value","external_name":"value","restriction":""}],"args_string":"(value, &)","args_html":"(value, &)","location":{"filename":"src/avltree/sorted_map.cr","line_number":452,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L452"},"def":{"name":"key_for","args":[{"name":"value","external_name":"value","restriction":""}],"yields":1,"block_arity":1,"visibility":"Public","body":"each do |k, v|\n  if v == value\n    return k\n  end\nend\nyield value\n"}},{"html_id":"key_for?(value):K|Nil-instance-method","name":"key_for?","abstract":false,"args":[{"name":"value","external_name":"value","restriction":""}],"args_string":"(value) : K | Nil","args_html":"(value) : K | Nil","location":{"filename":"src/avltree/sorted_map.cr","line_number":448,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L448"},"def":{"name":"key_for?","args":[{"name":"value","external_name":"value","restriction":""}],"return_type":"K | ::Nil","visibility":"Public","body":"key_for(value) do\n  nil\nend"}},{"html_id":"keys:Array(K)-instance-method","name":"keys","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":420,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L420"},"def":{"name":"keys","return_type":"Array(K)","visibility":"Public","body":"map(&.[](0))"}},{"html_id":"last_key:K-instance-method","name":"last_key","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":726,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L726"},"def":{"name":"last_key","return_type":"K","visibility":"Public","body":"node = last_node\nnode ? node.not_nil!.key : raise(\"Can't get last key of empty SortedMap\")\n"}},{"html_id":"last_key?:K|Nil-instance-method","name":"last_key?","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":731,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L731"},"def":{"name":"last_key?","return_type":"K | ::Nil","visibility":"Public","body":"node = last_node\nnode ? node.not_nil!.key : nil\n"}},{"html_id":"last_value:K-instance-method","name":"last_value","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":736,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L736"},"def":{"name":"last_value","return_type":"K","visibility":"Public","body":"node = last_node\nnode ? node.not_nil!.value : raise(\"Can't get last value of empty SortedMap\")\n"}},{"html_id":"last_value?:K|Nil-instance-method","name":"last_value?","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":741,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L741"},"def":{"name":"last_value?","return_type":"K | ::Nil","visibility":"Public","body":"node = last_node\nnode ? node.not_nil!.value : nil\n"}},{"html_id":"less_equal_index(key:K):Int32|Nil-instance-method","name":"less_equal_index","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Int32 | Nil","args_html":"(key : K) : Int32 | Nil","location":{"filename":"src/avltree/sorted_map.cr","line_number":792,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L792"},"def":{"name":"less_equal_index","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"Int32 | ::Nil","visibility":"Public","body":"(less_equal_item_with_index(key))[1]"}},{"html_id":"less_equal_item(key:K):Tuple(K,V)|Nil-instance-method","name":"less_equal_item","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Tuple(K, V) | Nil","args_html":"(key : K) : Tuple(K, V) | Nil","location":{"filename":"src/avltree/sorted_map.cr","line_number":788,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L788"},"def":{"name":"less_equal_item","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"::Tuple(K, V) | ::Nil","visibility":"Public","body":"(less_equal_item_with_index(key))[0]"}},{"html_id":"less_equal_item_with_index(key:K):Tuple(Tuple(K,V)|Nil,Int32|Nil)-instance-method","name":"less_equal_item_with_index","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Tuple(Tuple(K, V) | Nil, Int32 | Nil)","args_html":"(key : K) : Tuple(Tuple(K, V) | Nil, Int32 | Nil)","location":{"filename":"src/avltree/sorted_map.cr","line_number":773,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L773"},"def":{"name":"less_equal_item_with_index","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"::Tuple(::Tuple(K, V) | ::Nil, Int32 | ::Nil)","visibility":"Public","body":"if @root.nil?\n  return {nil, nil}\nend\nnode, bound = lower_bound_impl(key)\nif node && (key == node.not_nil!.key)\n  { {node.not_nil!.key, node.not_nil!.value}, bound }\nelse\n  if bound == 0\n    {nil, nil}\n  else\n    node = (bound == size ? last_node : node.not_nil!.prev).not_nil!\n    { {node.key, node.value}, bound - 1 }\n  end\nend\n"}},{"html_id":"less_index(key:K):Int32|Nil-instance-method","name":"less_index","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Int32 | Nil","args_html":"(key : K) : Int32 | Nil","location":{"filename":"src/avltree/sorted_map.cr","line_number":769,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L769"},"def":{"name":"less_index","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"Int32 | ::Nil","visibility":"Public","body":"(less_item_with_index(key))[1]"}},{"html_id":"less_item(key:K):Tuple(K,V)|Nil-instance-method","name":"less_item","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Tuple(K, V) | Nil","args_html":"(key : K) : Tuple(K, V) | Nil","location":{"filename":"src/avltree/sorted_map.cr","line_number":765,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L765"},"def":{"name":"less_item","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"::Tuple(K, V) | ::Nil","visibility":"Public","body":"(less_item_with_index(key))[0]"}},{"html_id":"less_item_with_index(key:K):Tuple(Tuple(K,V)|Nil,Int32|Nil)-instance-method","name":"less_item_with_index","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Tuple(Tuple(K, V) | Nil, Int32 | Nil)","args_html":"(key : K) : Tuple(Tuple(K, V) | Nil, Int32 | Nil)","location":{"filename":"src/avltree/sorted_map.cr","line_number":754,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L754"},"def":{"name":"less_item_with_index","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"::Tuple(::Tuple(K, V) | ::Nil, Int32 | ::Nil)","visibility":"Public","body":"if @root.nil?\n  return {nil, nil}\nend\nnode, bound = lower_bound_impl(key)\nif bound == 0\n  {nil, nil}\nelse\n  node = (bound == size ? last_node : node.not_nil!.prev).not_nil!\n  { {node.key, node.value}, bound - 1 }\nend\n"}},{"html_id":"lower_bound(key:K):Int32-instance-method","name":"lower_bound","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Int32","args_html":"(key : K) : Int32","location":{"filename":"src/avltree/sorted_map.cr","line_number":746,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L746"},"def":{"name":"lower_bound","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"Int32","visibility":"Public","body":"(lower_bound_impl(key))[1]"}},{"html_id":"max-instance-method","name":"max","doc":"Returns the element with the maximum value in the collection.\n\nIt compares using `>` so it will work for any type that supports that method.\n\n```\n[1, 2, 3].max        # => 3\n[\"Alice\", \"Bob\"].max # => \"Bob\"\n```\n\nRaises `Enumerable::EmptyError` if the collection is empty.","summary":"<p>Returns the element with the maximum value in the collection.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":833,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L833"},"def":{"name":"max","visibility":"Public","body":"node = last_node\nif node.nil?\n  return nil\nend\n{node.not_nil!.key, node.not_nil!.value}\n"}},{"html_id":"min-instance-method","name":"min","doc":"Returns the element with the minimum value in the collection.\n\nIt compares using `<` so it will work for any type that supports that method.\n\n```\n[1, 2, 3].min        # => 1\n[\"Alice\", \"Bob\"].min # => \"Alice\"\n```\n\nRaises `Enumerable::EmptyError` if the collection is empty.","summary":"<p>Returns the element with the minimum value in the collection.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":839,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L839"},"def":{"name":"min","visibility":"Public","body":"node = first_node\nif node.nil?\n  return nil\nend\n{node.not_nil!.key, node.not_nil!.value}\n"}},{"html_id":"pop:Tuple(K,V)-instance-method","name":"pop","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":533,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L533"},"def":{"name":"pop","return_type":"Tuple(K, V)","visibility":"Public","body":"delete_at(size - 1) do\n  raise(IndexError.new)\nend"}},{"html_id":"pop(&)-instance-method","name":"pop","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":537,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L537"},"def":{"name":"pop","yields":0,"block_arity":0,"visibility":"Public","body":"key = key_at?(size - 1)\nif key\n  delete(key)\nelse\n  yield\nend\n"}},{"html_id":"pop?:Tuple(K,V)|Nil-instance-method","name":"pop?","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":546,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L546"},"def":{"name":"pop?","return_type":"::Tuple(K, V) | ::Nil","visibility":"Public","body":"pop do\n  nil\nend"}},{"html_id":"proper_superset_of?(other:Hash):Bool-instance-method","name":"proper_superset_of?","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Hash"}],"args_string":"(other : Hash) : Bool","args_html":"(other : Hash) : Bool","location":{"filename":"src/avltree/sorted_map.cr","line_number":562,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L562"},"def":{"name":"proper_superset_of?","args":[{"name":"other","external_name":"other","restriction":"Hash"}],"return_type":"Bool","visibility":"Public","body":"other.proper_subset_of?(self)"}},{"html_id":"put(key:K,value:V,&)-instance-method","name":"put","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"},{"name":"value","external_name":"value","restriction":"V"}],"args_string":"(key : K, value : V, &)","args_html":"(key : K, value : V, &)","location":{"filename":"src/avltree/sorted_map.cr","line_number":316,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L316"},"def":{"name":"put","args":[{"name":"key","external_name":"key","restriction":"K"},{"name":"value","external_name":"value","restriction":"V"}],"yields":1,"block_arity":1,"visibility":"Public","body":"updated_item = upsert(key, value)\nupdated_item ? updated_item.value : yield key\n"}},{"html_id":"reject(&:K,V->):SortedMap(K,V)-instance-method","name":"reject","doc":"Returns an `Array` with all the elements in the collection for which\nthe passed block is falsey.\n\n```\n[1, 2, 3, 4, 5, 6].reject { |i| i % 2 == 0 } # => [1, 3, 5]\n```","summary":"<p>Returns an <code>Array</code> with all the elements in the collection for which the passed block is falsey.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":653,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L653"},"def":{"name":"reject","yields":2,"block_arity":2,"block_arg":{"name":"","external_name":"","restriction":"(K, V ->)"},"return_type":"SortedMap(K, V)","visibility":"Public","body":"each_with_object(SortedMap(K, V).new) do |__arg3, memo|\n  key = __arg3[0]\n  value = __arg3[1]\n  if yield key, value\n  else\n    memo[key] = value\n  end\nend"}},{"html_id":"reject(*keys):SortedMap(K,V)-instance-method","name":"reject","abstract":false,"args":[{"name":"keys","external_name":"keys","restriction":""}],"args_string":"(*keys) : SortedMap(K, V)","args_html":"(*keys) : <a href=\"../AVLTree/SortedMap.html\">SortedMap</a>(K, V)","location":{"filename":"src/avltree/sorted_map.cr","line_number":666,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L666"},"def":{"name":"reject","args":[{"name":"keys","external_name":"keys","restriction":""}],"splat_index":0,"return_type":"SortedMap(K, V)","visibility":"Public","body":"map = self.clone\nmap.reject(*keys)\n"}},{"html_id":"reject!(&:K,V->):SortedMap(K,V)-instance-method","name":"reject!","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":659,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L659"},"def":{"name":"reject!","yields":2,"block_arity":2,"block_arg":{"name":"","external_name":"","restriction":"(K, V ->)"},"return_type":"SortedMap(K, V)","visibility":"Public","body":"each do |key, value|\n  if yield key, value\n    delete(key)\n  end\nend\nself\n"}},{"html_id":"reject!(keys:Enumerable):SortedMap(K,V)-instance-method","name":"reject!","abstract":false,"args":[{"name":"keys","external_name":"keys","restriction":"Enumerable"}],"args_string":"(keys : Enumerable) : SortedMap(K, V)","args_html":"(keys : <a href=\"../Enumerable.html\">Enumerable</a>) : <a href=\"../AVLTree/SortedMap.html\">SortedMap</a>(K, V)","location":{"filename":"src/avltree/sorted_map.cr","line_number":671,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L671"},"def":{"name":"reject!","args":[{"name":"keys","external_name":"keys","restriction":"Enumerable"}],"return_type":"SortedMap(K, V)","visibility":"Public","body":"keys.each do |key|\n  delete(key)\nend\nself\n"}},{"html_id":"reject!(*keys):SortedMap(K,V)-instance-method","name":"reject!","abstract":false,"args":[{"name":"keys","external_name":"keys","restriction":""}],"args_string":"(*keys) : SortedMap(K, V)","args_html":"(*keys) : <a href=\"../AVLTree/SortedMap.html\">SortedMap</a>(K, V)","location":{"filename":"src/avltree/sorted_map.cr","line_number":676,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L676"},"def":{"name":"reject!","args":[{"name":"keys","external_name":"keys","restriction":""}],"splat_index":0,"return_type":"SortedMap(K, V)","visibility":"Public","body":"reject!(*keys)"}},{"html_id":"reverse_each(&:Tuple(K,V)->):Nil-instance-method","name":"reverse_each","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":626,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L626"},"def":{"name":"reverse_each","yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(::Tuple(K, V) ->)"},"return_type":"Nil","visibility":"Public","body":"iter = ReverseItemIterator(K, V).new(self)\niter.each do |key_and_value|\n  yield key_and_value\nend\n"}},{"html_id":"reverse_each-instance-method","name":"reverse_each","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":631,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L631"},"def":{"name":"reverse_each","visibility":"Public","body":"ReverseItemIterator(K, V).new(self)"}},{"html_id":"reverse_each_key(&:K->):Nil-instance-method","name":"reverse_each_key","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":635,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L635"},"def":{"name":"reverse_each_key","yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(K ->)"},"return_type":"Nil","visibility":"Public","body":"iter = ReverseKeyIterator(K, V).new(self)\niter.reverse_each do |key|\n  yield key\nend\n"}},{"html_id":"reverse_each_key-instance-method","name":"reverse_each_key","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":640,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L640"},"def":{"name":"reverse_each_key","visibility":"Public","body":"ReverseKeyIterator(K, V).new(self)"}},{"html_id":"reverse_each_value(&:V->):Nil-instance-method","name":"reverse_each_value","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":644,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L644"},"def":{"name":"reverse_each_value","yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(V ->)"},"return_type":"Nil","visibility":"Public","body":"iter = ReverseValueIterator(K, V).new(self)\niter.reverse_each do |value|\n  yield value\nend\n"}},{"html_id":"reverse_each_value-instance-method","name":"reverse_each_value","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":649,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L649"},"def":{"name":"reverse_each_value","visibility":"Public","body":"ReverseValueIterator(K, V).new(self)"}},{"html_id":"select(keys:Enumerable):SortedMap(K,V)-instance-method","name":"select","abstract":false,"args":[{"name":"keys","external_name":"keys","restriction":"Enumerable"}],"args_string":"(keys : Enumerable) : SortedMap(K, V)","args_html":"(keys : <a href=\"../Enumerable.html\">Enumerable</a>) : <a href=\"../AVLTree/SortedMap.html\">SortedMap</a>(K, V)","location":{"filename":"src/avltree/sorted_map.cr","line_number":680,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L680"},"def":{"name":"select","args":[{"name":"keys","external_name":"keys","restriction":"Enumerable"}],"return_type":"SortedMap(K, V)","visibility":"Public","body":"keys.each_with_object(SortedMap(K, V).new) do |key, memo|\n  value = self[key]?\n  if value\n    memo[key] = value\n  end\nend"}},{"html_id":"select(*keys):SortedMap(K,V)-instance-method","name":"select","abstract":false,"args":[{"name":"keys","external_name":"keys","restriction":""}],"args_string":"(*keys) : SortedMap(K, V)","args_html":"(*keys) : <a href=\"../AVLTree/SortedMap.html\">SortedMap</a>(K, V)","location":{"filename":"src/avltree/sorted_map.cr","line_number":687,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L687"},"def":{"name":"select","args":[{"name":"keys","external_name":"keys","restriction":""}],"splat_index":0,"return_type":"SortedMap(K, V)","visibility":"Public","body":"self.select(keys)"}},{"html_id":"select!(keys:Indexable):self-instance-method","name":"select!","abstract":false,"args":[{"name":"keys","external_name":"keys","restriction":"Indexable"}],"args_string":"(keys : Indexable) : self","args_html":"(keys : Indexable) : <span class=\"k\">self</span>","location":{"filename":"src/avltree/sorted_map.cr","line_number":691,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L691"},"def":{"name":"select!","args":[{"name":"keys","external_name":"keys","restriction":"Indexable"}],"return_type":"self","visibility":"Public","body":"each_key do |key|\n  if k.in?(keys)\n  else\n    delete(key)\n  end\nend\nself\n"}},{"html_id":"select!(keys:Enumerable):self-instance-method","name":"select!","abstract":false,"args":[{"name":"keys","external_name":"keys","restriction":"Enumerable"}],"args_string":"(keys : Enumerable) : self","args_html":"(keys : <a href=\"../Enumerable.html\">Enumerable</a>) : <span class=\"k\">self</span>","location":{"filename":"src/avltree/sorted_map.cr","line_number":696,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L696"},"def":{"name":"select!","args":[{"name":"keys","external_name":"keys","restriction":"Enumerable"}],"return_type":"self","visibility":"Public","body":"key_set = keys.to_set\neach_key do |k|\n  if k.in?(key_set)\n  else\n    delete(k)\n  end\nend\nself\n"}},{"html_id":"select!(*keys):self-instance-method","name":"select!","abstract":false,"args":[{"name":"keys","external_name":"keys","restriction":""}],"args_string":"(*keys) : self","args_html":"(*keys) : <span class=\"k\">self</span>","location":{"filename":"src/avltree/sorted_map.cr","line_number":702,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L702"},"def":{"name":"select!","args":[{"name":"keys","external_name":"keys","restriction":""}],"splat_index":0,"return_type":"self","visibility":"Public","body":"select!(keys)"}},{"html_id":"shift:Tuple(K,V)-instance-method","name":"shift","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":516,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L516"},"def":{"name":"shift","return_type":"Tuple(K, V)","visibility":"Public","body":"delete_at(0) do\n  raise(IndexError.new)\nend"}},{"html_id":"shift(&)-instance-method","name":"shift","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":520,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L520"},"def":{"name":"shift","yields":0,"block_arity":0,"visibility":"Public","body":"key = key_at?(0)\nif key\n  delete(key)\nelse\n  yield\nend\n"}},{"html_id":"shift?:Tuple(K,V)|Nil-instance-method","name":"shift?","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":529,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L529"},"def":{"name":"shift?","return_type":"::Tuple(K, V) | ::Nil","visibility":"Public","body":"shift do\n  nil\nend"}},{"html_id":"size:Int32-instance-method","name":"size","doc":"Returns the number of elements in the collection.\n\n```\n[1, 2, 3, 4].size # => 4\n```","summary":"<p>Returns the number of elements in the collection.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":474,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L474"},"def":{"name":"size","return_type":"Int32","visibility":"Public","body":"@root ? @root.not_nil!.size : 0"}},{"html_id":"subset_of?(other:SortedMap(K,V)):Bool-instance-method","name":"subset_of?","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"SortedMap(K, V)"}],"args_string":"(other : SortedMap(K, V)) : Bool","args_html":"(other : <a href=\"../AVLTree/SortedMap.html\">SortedMap</a>(K, V)) : Bool","location":{"filename":"src/avltree/sorted_map.cr","line_number":550,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L550"},"def":{"name":"subset_of?","args":[{"name":"other","external_name":"other","restriction":"SortedMap(K, V)"}],"return_type":"Bool","visibility":"Public","body":"if other.size < size\n  return false\nend\nall? do |key, value|\n  other_value = other.fetch(key) do\n    false\n  end\n  other_value == value\nend\n"}},{"html_id":"superset_of?(other:SortedMap(K,V)):Bool-instance-method","name":"superset_of?","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"SortedMap(K, V)"}],"args_string":"(other : SortedMap(K, V)) : Bool","args_html":"(other : <a href=\"../AVLTree/SortedMap.html\">SortedMap</a>(K, V)) : Bool","location":{"filename":"src/avltree/sorted_map.cr","line_number":558,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L558"},"def":{"name":"superset_of?","args":[{"name":"other","external_name":"other","restriction":"SortedMap(K, V)"}],"return_type":"Bool","visibility":"Public","body":"other.subset_of?(self)"}},{"html_id":"to_a:Array(Tuple(K,V))-instance-method","name":"to_a","doc":"Returns an `Array` with all the elements in the collection.\n\n```\n(1..5).to_a # => [1, 2, 3, 4, 5]\n```","summary":"<p>Returns an <code>Array</code> with all the elements in the collection.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":879,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L879"},"def":{"name":"to_a","return_type":"Array(::Tuple(K, V))","visibility":"Public","body":"ary = Array(::Tuple(K, V)).new(self.size)\neach do |key, value|\n  ary << {key, value}\nend\nary\n"}},{"html_id":"to_hash-instance-method","name":"to_hash","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":887,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L887"},"def":{"name":"to_hash","visibility":"Public","body":"hash = Hash(K, V).new(@block)\neach do |key, value|\n  hash[key] = value\nend\nhash\n"}},{"html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Appends a short String representation of this object\nwhich includes its class name and its object address.\n\n```\nclass Person\n  def initialize(@name : String, @age : Int32)\n  end\nend\n\nPerson.new(\"John\", 32).to_s # => #<Person:0x10a199f20>\n```","summary":"<p>Appends a short String representation of this object which includes its class name and its object address.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/avltree/sorted_map.cr","line_number":870,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L870"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"io << \"{\"\neach_with_index do |__arg4, i|\n  key = __arg4[0]\n  value = __arg4[1]\n  if i != 0\n    io << \", \"\n  end\n  ((io << key) << \" => \") << value\nend\nio << \"}\"\n"}},{"html_id":"unordered_each(node=@root,&:Tuple(K,V)->):Nil-instance-method","name":"unordered_each","abstract":false,"args":[{"name":"node","default_value":"@root","external_name":"node","restriction":""}],"args_string":"(node = @root, & : Tuple(K, V) -> ) : Nil","args_html":"(node = @root, & : Tuple(K, V) -> ) : Nil","location":{"filename":"src/avltree/sorted_map.cr","line_number":615,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L615"},"def":{"name":"unordered_each","args":[{"name":"node","default_value":"@root","external_name":"node","restriction":""}],"yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(::Tuple(K, V) ->)"},"return_type":"Nil","visibility":"Public","body":"if node.nil?\n  return\nend\nnext_node = Deque.new([node.not_nil!])\nwhile !next_node.empty?\n  now = next_node.shift\n  yield({now.key, now.value})\n  if now.left\n    next_node << now.left!\n  end\n  if now.right\n    next_node << now.right!\n  end\nend\n"}},{"html_id":"unsafe_fetch(index:Int)-instance-method","name":"unsafe_fetch","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int)","args_html":"(index : Int)","location":{"filename":"src/avltree/sorted_map.cr","line_number":352,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L352"},"def":{"name":"unsafe_fetch","args":[{"name":"index","external_name":"index","restriction":"Int"}],"visibility":"Public","body":"node = @root\nindex = index + 1\nloop do\n  left_size = (node.not_nil!.left ? node.not_nil!.left!.size : 0) + 1\n  if left_size == index\n    break\n  end\n  if index < left_size\n    node = node.not_nil!.left\n  else\n    node = node.not_nil!.right\n    index = index - left_size\n  end\nend\n{node.not_nil!.key, node.not_nil!.value}\n"}},{"html_id":"update(key:K,&:V->V):V-instance-method","name":"update","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K, & : V -> V) : V","args_html":"(key : K, & : V -> V) : V","location":{"filename":"src/avltree/sorted_map.cr","line_number":340,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L340"},"def":{"name":"update","args":[{"name":"key","external_name":"key","restriction":"K"}],"yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(V -> V)"},"return_type":"V","visibility":"Public","body":"if has_key?(key)\n  self[key] = yield self[key]\nelse\n  if block = @block\n    default_value = block.call(self, key)\n    upsert(key, yield default_value)\n    defalut_value\n  else\n    raise(KeyError.new(\"Missing hash key: #{key.inspect}\"))\n  end\nend"}},{"html_id":"upper_bound(key:K):Int32-instance-method","name":"upper_bound","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Int32","args_html":"(key : K) : Int32","location":{"filename":"src/avltree/sorted_map.cr","line_number":750,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L750"},"def":{"name":"upper_bound","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"Int32","visibility":"Public","body":"(upper_bound_impl(key))[1]"}},{"html_id":"value_at(index:Int):V-instance-method","name":"value_at","doc":"Returns the value at the *index*-th.","summary":"<p>Returns the value at the <em>index</em>-th.</p>","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : V","args_html":"(index : Int) : V","location":{"filename":"src/avltree/sorted_map.cr","line_number":409,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L409"},"def":{"name":"value_at","args":[{"name":"index","external_name":"index","restriction":"Int"}],"return_type":"V","visibility":"Public","body":"ret ? ret.not_nil![1] : raise(IndexError.new)"}},{"html_id":"value_at?(index:Int):V|Nil-instance-method","name":"value_at?","doc":"Like `at`, but returns `nil`\nif trying to access an value outside the set's range.","summary":"<p>Like <code><a href=\"../AVLTree/SortedMap.html#at%28index%3AInt%29%3ATuple%28K%2CV%29-instance-method\">#at</a></code>, but returns <code>nil</code> if trying to access an value outside the set's range.</p>","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : V | Nil","args_html":"(index : Int) : V | Nil","location":{"filename":"src/avltree/sorted_map.cr","line_number":415,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L415"},"def":{"name":"value_at?","args":[{"name":"index","external_name":"index","restriction":"Int"}],"return_type":"V | ::Nil","visibility":"Public","body":"item = at?(index)\nitem ? item.not_nil![1] : nil\n"}},{"html_id":"values:Array(V)-instance-method","name":"values","abstract":false,"location":{"filename":"src/avltree/sorted_map.cr","line_number":424,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L424"},"def":{"name":"values","return_type":"Array(V)","visibility":"Public","body":"map(&.[](1))"}},{"html_id":"values_at(*indices:Int)-instance-method","name":"values_at","abstract":false,"args":[{"name":"indices","external_name":"indices","restriction":"Int"}],"args_string":"(*indices : Int)","args_html":"(*indices : Int)","location":{"filename":"src/avltree/sorted_map.cr","line_number":432,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L432"},"def":{"name":"values_at","args":[{"name":"indices","external_name":"indices","restriction":"Int"}],"splat_index":0,"visibility":"Public","body":"indices.map do |index|\n  self[index]\nend"}},{"html_id":"values_by_key(*keys:K)-instance-method","name":"values_by_key","abstract":false,"args":[{"name":"keys","external_name":"keys","restriction":"K"}],"args_string":"(*keys : K)","args_html":"(*keys : K)","location":{"filename":"src/avltree/sorted_map.cr","line_number":428,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_map.cr#L428"},"def":{"name":"values_by_key","args":[{"name":"keys","external_name":"keys","restriction":"K"}],"splat_index":0,"visibility":"Public","body":"keys.map do |key|\n  self[key]\nend"}}]},{"html_id":"avltree/AVLTree/SortedMultimap","path":"AVLTree/SortedMultimap.html","kind":"class","full_name":"AVLTree::SortedMultimap(K, V)","name":"SortedMultimap","abstract":false,"superclass":{"html_id":"avltree/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avltree/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"avltree/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"avltree/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avltree/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avltree/sorted_multimap.cr","line_number":2,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L2"}],"repository_name":"avltree","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avltree/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"avltree/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"namespace":{"html_id":"avltree/AVLTree","kind":"module","full_name":"AVLTree","name":"AVLTree"},"class_methods":[{"html_id":"zip(ary1:Array(K),ary2:Array(V))-class-method","name":"zip","abstract":false,"args":[{"name":"ary1","external_name":"ary1","restriction":"Array(K)"},{"name":"ary2","external_name":"ary2","restriction":"Array(V)"}],"args_string":"(ary1 : Array(K), ary2 : Array(V))","args_html":"(ary1 : Array(K), ary2 : Array(V))","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":251,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L251"},"def":{"name":"zip","args":[{"name":"ary1","external_name":"ary1","restriction":"Array(K)"},{"name":"ary2","external_name":"ary2","restriction":"Array(V)"}],"visibility":"Public","body":"map = self.new\nary1.zip(ary2) do |key, value|\n  map[key] = value\nend\nmap\n"}}],"constructors":[{"html_id":"new(hash:Hash(K,V))-class-method","name":"new","abstract":false,"args":[{"name":"hash","external_name":"hash","restriction":"Hash(K, V)"}],"args_string":"(hash : Hash(K, V))","args_html":"(hash : Hash(K, V))","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":243,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L243"},"def":{"name":"new","args":[{"name":"hash","external_name":"hash","restriction":"Hash(K, V)"}],"visibility":"Public","body":"map = self.new\nhash.each do |key, value|\n  map[key] = value\nend\nmap\n"}},{"html_id":"new(defalut_value:V)-class-method","name":"new","abstract":false,"args":[{"name":"defalut_value","external_name":"defalut_value","restriction":"V"}],"args_string":"(defalut_value : V)","args_html":"(defalut_value : V)","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":226,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L226"},"def":{"name":"new","args":[{"name":"defalut_value","external_name":"defalut_value","restriction":"V"}],"visibility":"Public","body":"new do\n  default_value\nend"}},{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":238,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L238"},"def":{"name":"new","visibility":"Public","body":"_ = SortedMultimap(K, V).allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(&block:self,K->V)-class-method","name":"new","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":234,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L234"},"def":{"name":"new","yields":2,"block_arity":2,"block_arg":{"name":"block","external_name":"block","restriction":"(self, K -> V)"},"visibility":"Public","body":"new(block)"}}],"instance_methods":[{"html_id":"==(other:SortedMultimap):Bool-instance-method","name":"==","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"SortedMultimap"}],"args_string":"(other : SortedMultimap) : Bool","args_html":"(other : <a href=\"../AVLTree/SortedMultimap.html\">SortedMultimap</a>) : Bool","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":259,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L259"},"def":{"name":"==","args":[{"name":"other","external_name":"other","restriction":"SortedMultimap"}],"return_type":"Bool","visibility":"Public","body":"if size == other.size\nelse\n  return false\nend\nother.unordered_each do |key, value|\n  node = find_node(@root, key)\n  if node.nil?\n    return false\n  end\n  if node.not_nil!.key != key\n    return false\n  end\n  if node.not_nil!.value != value\n    return false\n  end\nend\ntrue\n"}},{"html_id":"[](key:K):V-instance-method","name":"[]","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : V","args_html":"(key : K) : V","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":289,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L289"},"def":{"name":"[]","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"V","visibility":"Public","body":"fetch(key) do\n  if (block = @block) && key.is_a?(K)\n    block.call(self, key.as(K))\n  else\n    raise(KeyError.new(\"Missing hash key: #{key.inspect}\"))\n  end\nend"}},{"html_id":"[]=(key:K,value:V):V-instance-method","name":"[]=","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"},{"name":"value","external_name":"value","restriction":"V"}],"args_string":"(key : K, value : V) : V","args_html":"(key : K, value : V) : V","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":303,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L303"},"def":{"name":"[]=","args":[{"name":"key","external_name":"key","restriction":"K"},{"name":"value","external_name":"value","restriction":"V"}],"return_type":"V","visibility":"Public","body":"upsert(key, value)\nvalue\n"}},{"html_id":"[]?(key:K):V|Nil-instance-method","name":"[]?","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : V | Nil","args_html":"(key : K) : V | Nil","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":299,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L299"},"def":{"name":"[]?","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"V | ::Nil","visibility":"Public","body":"fetch(key, nil)"}},{"html_id":"at(index:Int)-instance-method","name":"at","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int)","args_html":"(index : Int)","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":347,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L347"},"def":{"name":"at","args":[{"name":"index","external_name":"index","restriction":"Int"}],"visibility":"Public","body":"fetch_at(index) do\n  raise(IndexError.new)\nend"}},{"html_id":"at(index:Int,&)-instance-method","name":"at","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int, &)","args_html":"(index : Int, &)","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":351,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L351"},"def":{"name":"at","args":[{"name":"index","external_name":"index","restriction":"Int"}],"yields":1,"block_arity":1,"visibility":"Public","body":"fetch_at(index) do |i|\n  yield i\nend"}},{"html_id":"at?(index:Int)-instance-method","name":"at?","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int)","args_html":"(index : Int)","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":355,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L355"},"def":{"name":"at?","args":[{"name":"index","external_name":"index","restriction":"Int"}],"visibility":"Public","body":"fetch_at(index) do\n  nil\nend"}},{"html_id":"clear:self-instance-method","name":"clear","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":418,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L418"},"def":{"name":"clear","return_type":"self","visibility":"Public","body":"@root = nil\nself\n"}},{"html_id":"clone-instance-method","name":"clone","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":270,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L270"},"def":{"name":"clone","visibility":"Public","body":"map = SortedMultimap(K, V).new\nunordered_each do |key, value|\n  map[key] = value.clone\nend\nmap\n"}},{"html_id":"compact-instance-method","name":"compact","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":423,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L423"},"def":{"name":"compact","visibility":"Public","body":"each_with_object(SortedMultimap(K, V).new) do |__arg2, memo|\n  key = __arg2[0]\n  value = __arg2[1]\n  if value.nil?\n  else\n    memo[key] = value\n  end\nend"}},{"html_id":"compact!:self-instance-method","name":"compact!","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":429,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L429"},"def":{"name":"compact!","return_type":"self","visibility":"Public","body":"reject! do |_, value|\n  value.nil?\nend"}},{"html_id":"delete(key:K):V|Nil-instance-method","name":"delete","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : V | Nil","args_html":"(key : K) : V | Nil","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":450,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L450"},"def":{"name":"delete","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"V | ::Nil","visibility":"Public","body":"delete(key) do\n  nil\nend"}},{"html_id":"delete(key:K,&)-instance-method","name":"delete","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K, &)","args_html":"(key : K, &)","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":454,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L454"},"def":{"name":"delete","args":[{"name":"key","external_name":"key","restriction":"K"}],"yields":1,"block_arity":1,"visibility":"Public","body":"entry = delete_impl(key)\nentry ? entry : yield key\n"}},{"html_id":"delete_at(index:Int)-instance-method","name":"delete_at","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int)","args_html":"(index : Int)","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":459,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L459"},"def":{"name":"delete_at","args":[{"name":"index","external_name":"index","restriction":"Int"}],"visibility":"Public","body":"key = key_at(index)\ndelete(key)\n"}},{"html_id":"delete_at?(index:Int)-instance-method","name":"delete_at?","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int)","args_html":"(index : Int)","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":464,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L464"},"def":{"name":"delete_at?","args":[{"name":"index","external_name":"index","restriction":"Int"}],"visibility":"Public","body":"key = key_at?(index)\nif key.nil?\n  return nil\nend\ndelete(key.not_nil!)\n"}},{"html_id":"dig(key:K)-instance-method","name":"dig","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K)","args_html":"(key : K)","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":527,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L527"},"def":{"name":"dig","args":[{"name":"key","external_name":"key","restriction":"K"}],"visibility":"Public","body":"self[key]"}},{"html_id":"dig(key:K,*subkeys)-instance-method","name":"dig","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"},{"name":"subkeys","external_name":"subkeys","restriction":""}],"args_string":"(key : K, *subkeys)","args_html":"(key : K, *subkeys)","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":520,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L520"},"def":{"name":"dig","args":[{"name":"key","external_name":"key","restriction":"K"},{"name":"subkeys","external_name":"subkeys","restriction":""}],"splat_index":1,"visibility":"Public","body":"if (value = self[key]) && (value.responds_to?(:dig))\n  return value.dig(*subkeys)\nend\nraise(KeyError.new(\"Hash value not diggable for key: #{key.inspect}\"))\n"}},{"html_id":"dig?(key:K)-instance-method","name":"dig?","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K)","args_html":"(key : K)","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":538,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L538"},"def":{"name":"dig?","args":[{"name":"key","external_name":"key","restriction":"K"}],"visibility":"Public","body":"self[key]?"}},{"html_id":"dig?(key:K,*subkeys)-instance-method","name":"dig?","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"},{"name":"subkeys","external_name":"subkeys","restriction":""}],"args_string":"(key : K, *subkeys)","args_html":"(key : K, *subkeys)","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":531,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L531"},"def":{"name":"dig?","args":[{"name":"key","external_name":"key","restriction":"K"},{"name":"subkeys","external_name":"subkeys","restriction":""}],"splat_index":1,"visibility":"Public","body":"if (value = self[key]?) && (value.responds_to?(:\"dig?\"))\n  return value.dig?(*subkeys)\nend\nnil\n"}},{"html_id":"dup-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nThis allocates a new object and copies the contents of\n`self` into it.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":278,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L278"},"def":{"name":"dup","visibility":"Public","body":"map = SortedMultimap(K, V).new\nmap.root = @root.dup\nmap.block = @block.dup\n"}},{"html_id":"each(&:Tuple(K,V)->):Nil-instance-method","name":"each","doc":"Must yield this collection's elements to the block.","summary":"<p>Must yield this collection's elements to the block.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":542,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L542"},"def":{"name":"each","yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(::Tuple(K, V) ->)"},"return_type":"Nil","visibility":"Public","body":"iter = ItemIterator(K, V).new(self)\niter.each do |key_and_value|\n  yield key_and_value\nend\n"}},{"html_id":"each-instance-method","name":"each","doc":"Must return an `Iterator` over the elements in this collection.","summary":"<p>Must return an <code>Iterator</code> over the elements in this collection.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":547,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L547"},"def":{"name":"each","visibility":"Public","body":"ItemIterator(K, V).new(self)"}},{"html_id":"each_key(&:K->):Nil-instance-method","name":"each_key","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":551,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L551"},"def":{"name":"each_key","yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(K ->)"},"return_type":"Nil","visibility":"Public","body":"iter = KeyIterator(K, V).new(self)\niter.each do |key|\n  yield key\nend\n"}},{"html_id":"each_key-instance-method","name":"each_key","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":556,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L556"},"def":{"name":"each_key","visibility":"Public","body":"KeyIterator(K, V).new(self)"}},{"html_id":"each_value(&:V->):Nil-instance-method","name":"each_value","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":560,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L560"},"def":{"name":"each_value","yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(V ->)"},"return_type":"Nil","visibility":"Public","body":"iter = ValueIterator(K, V).new(self)\niter.each do |value|\n  yield value\nend\n"}},{"html_id":"each_value-instance-method","name":"each_value","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":565,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L565"},"def":{"name":"each_value","visibility":"Public","body":"ValueIterator(K, V).new(self)"}},{"html_id":"empty?-instance-method","name":"empty?","doc":"Returns `true` if `self` is empty, `false` otherwise.\n\n```\n([] of Int32).empty? # => true\n([1]).empty?         # => false\n```","summary":"<p>Returns <code>true</code> if <code>self</code> is empty, <code>false</code> otherwise.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":836,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L836"},"def":{"name":"empty?","visibility":"Public","body":"@root.nil?"}},{"html_id":"fetch(key:K,default)-instance-method","name":"fetch","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"},{"name":"default","external_name":"default","restriction":""}],"args_string":"(key : K, default)","args_html":"(key : K, default)","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":437,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L437"},"def":{"name":"fetch","args":[{"name":"key","external_name":"key","restriction":"K"},{"name":"default","external_name":"default","restriction":""}],"visibility":"Public","body":"fetch(key) do\n  default\nend"}},{"html_id":"fetch(key:K,&)-instance-method","name":"fetch","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K, &)","args_html":"(key : K, &)","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":441,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L441"},"def":{"name":"fetch","args":[{"name":"key","external_name":"key","restriction":"K"}],"yields":1,"block_arity":1,"visibility":"Public","body":"node = find_node(@root, key)\nif node && (node.key == key)\n  node.value\nelse\n  yield key\nend\n"}},{"html_id":"fetch_at(index:Int,&)-instance-method","name":"fetch_at","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int, &)","args_html":"(index : Int, &)","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":337,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L337"},"def":{"name":"fetch_at","args":[{"name":"index","external_name":"index","restriction":"Int"}],"yields":1,"block_arity":1,"visibility":"Public","body":"if index < 0\n  index = index + size\nend\nif 0 <= index && index < size\nelse\n  return yield index\nend\nunsafe_fetch(index)\n"}},{"html_id":"fetch_at(index:Int,default)-instance-method","name":"fetch_at","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"},{"name":"default","external_name":"default","restriction":""}],"args_string":"(index : Int, default)","args_html":"(index : Int, default)","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":343,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L343"},"def":{"name":"fetch_at","args":[{"name":"index","external_name":"index","restriction":"Int"},{"name":"default","external_name":"default","restriction":""}],"visibility":"Public","body":"fetch_at(index) do\n  default\nend"}},{"html_id":"first_key:K-instance-method","name":"first_key","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":660,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L660"},"def":{"name":"first_key","return_type":"K","visibility":"Public","body":"node = first_node\nnode ? node.not_nil!.key : raise(\"Can't get first key of empty SortedMultimap\")\n"}},{"html_id":"first_key?:K|Nil-instance-method","name":"first_key?","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":665,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L665"},"def":{"name":"first_key?","return_type":"K | ::Nil","visibility":"Public","body":"node = first_node\nnode ? node.not_nil!.key : nil\n"}},{"html_id":"first_value:K-instance-method","name":"first_value","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":670,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L670"},"def":{"name":"first_value","return_type":"K","visibility":"Public","body":"node = first_node\nnode ? node.not_nil!.value : raise(\"Can't get first value of empty SortedMultimap\")\n"}},{"html_id":"first_value?:K|Nil-instance-method","name":"first_value?","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":675,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L675"},"def":{"name":"first_value?","return_type":"K | ::Nil","visibility":"Public","body":"node = first_node\nnode ? node.not_nil!.value : nil\n"}},{"html_id":"greater_equal_index(key:K):Int32|Nil-instance-method","name":"greater_equal_index","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Int32 | Nil","args_html":"(key : K) : Int32 | Nil","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":772,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L772"},"def":{"name":"greater_equal_index","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"Int32 | ::Nil","visibility":"Public","body":"(greater_equal_item_with_index(key))[1]"}},{"html_id":"greater_equal_item(key:K):Tuple(K,V)|Nil-instance-method","name":"greater_equal_item","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Tuple(K, V) | Nil","args_html":"(key : K) : Tuple(K, V) | Nil","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":768,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L768"},"def":{"name":"greater_equal_item","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"::Tuple(K, V) | ::Nil","visibility":"Public","body":"(greater_equal_item_with_index(key))[0]"}},{"html_id":"greater_equal_item_with_index(key:K):Tuple(Tuple(K,V)|Nil,Int32|Nil)-instance-method","name":"greater_equal_item_with_index","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Tuple(Tuple(K, V) | Nil, Int32 | Nil)","args_html":"(key : K) : Tuple(Tuple(K, V) | Nil, Int32 | Nil)","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":763,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L763"},"def":{"name":"greater_equal_item_with_index","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"::Tuple(::Tuple(K, V) | ::Nil, Int32 | ::Nil)","visibility":"Public","body":"node, bound = lower_bound_impl(key)\nbound == size ? {nil, nil} : { {node.not_nil!.key, node.not_nil!.value}, bound }\n"}},{"html_id":"greater_index(key:K):Int32|Nil-instance-method","name":"greater_index","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Int32 | Nil","args_html":"(key : K) : Int32 | Nil","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":759,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L759"},"def":{"name":"greater_index","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"Int32 | ::Nil","visibility":"Public","body":"(greater_item_with_index(key))[1]"}},{"html_id":"greater_item(key:K):Tuple(K,V)|Nil-instance-method","name":"greater_item","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Tuple(K, V) | Nil","args_html":"(key : K) : Tuple(K, V) | Nil","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":755,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L755"},"def":{"name":"greater_item","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"::Tuple(K, V) | ::Nil","visibility":"Public","body":"(greater_item_with_index(key))[0]"}},{"html_id":"greater_item_with_index(key:K):Tuple(Tuple(K,V)|Nil,Int32|Nil)-instance-method","name":"greater_item_with_index","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Tuple(Tuple(K, V) | Nil, Int32 | Nil)","args_html":"(key : K) : Tuple(Tuple(K, V) | Nil, Int32 | Nil)","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":750,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L750"},"def":{"name":"greater_item_with_index","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"::Tuple(::Tuple(K, V) | ::Nil, Int32 | ::Nil)","visibility":"Public","body":"node, bound = upper_bound_impl(key)\nbound == size ? {nil, nil} : { {node.not_nil!.key, node.not_nil!.value}, bound }\n"}},{"html_id":"has_key?(key:K):Bool-instance-method","name":"has_key?","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Bool","args_html":"(key : K) : Bool","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":776,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L776"},"def":{"name":"has_key?","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"Bool","visibility":"Public","body":"if @root.nil?\n  return false\nend\nnode = find_node(@root, key)\nif (!node.nil?) && (node.key == key)\n  return true\nend\nfalse\n"}},{"html_id":"has_value?(value:V):Bool-instance-method","name":"has_value?","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"V"}],"args_string":"(value : V) : Bool","args_html":"(value : V) : Bool","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":829,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L829"},"def":{"name":"has_value?","args":[{"name":"value","external_name":"value","restriction":"V"}],"return_type":"Bool","visibility":"Public","body":"each_value do |v|\n  if v == value\n    return true\n  end\nend\nfalse\n"}},{"html_id":"index(key:K):Int32|Nil-instance-method","name":"index","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Int32 | Nil","args_html":"(key : K) : Int32 | Nil","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":799,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L799"},"def":{"name":"index","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"Int32 | ::Nil","visibility":"Public","body":"item, index = less_equal_item_with_index(key)\nindex && (item.not_nil![0] == key) ? index : nil\n"}},{"html_id":"index!(key:K):Int32-instance-method","name":"index!","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Int32","args_html":"(key : K) : Int32","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":804,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L804"},"def":{"name":"index!","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"Int32","visibility":"Public","body":"item, index = less_equal_item_with_index(key)\nindex && (item.not_nil![0] == key) ? index.not_nil! : raise(Enumerable::NotFoundError.new)\n"}},{"html_id":"inspect(io:IO):Nil-instance-method","name":"inspect","doc":"Appends a String representation of this object\nwhich includes its class name, its object address\nand the values of all instance variables.\n\n```\nclass Person\n  def initialize(@name : String, @age : Int32)\n  end\nend\n\nPerson.new(\"John\", 32).inspect # => #<Person:0x10fd31f20 @name=\"John\", @age=32>\n```","summary":"<p>Appends a String representation of this object which includes its class name, its object address and the values of all instance variables.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":840,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L840"},"def":{"name":"inspect","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"to_s(io)"}},{"html_id":"invert:SortedMultimap(V,K)-instance-method","name":"invert","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":395,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L395"},"def":{"name":"invert","return_type":"SortedMultimap(V, K)","visibility":"Public","body":"map = SortedMultimap(V, K)\neach do |key, value|\n  map[value] = key\nend\nmap\n"}},{"html_id":"key_at(index:Int):K-instance-method","name":"key_at","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : K","args_html":"(index : Int) : K","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":359,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L359"},"def":{"name":"key_at","args":[{"name":"index","external_name":"index","restriction":"Int"}],"return_type":"K","visibility":"Public","body":"ret = at?(index)\nret ? ret.not_nil![0] : raise(IndexError.new)\n"}},{"html_id":"key_at?(index:Int):K-instance-method","name":"key_at?","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : K","args_html":"(index : Int) : K","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":364,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L364"},"def":{"name":"key_at?","args":[{"name":"index","external_name":"index","restriction":"Int"}],"return_type":"K","visibility":"Public","body":"item = at?(index)\nitem ? item.not_nil![0] : nil\n"}},{"html_id":"key_for(value):K-instance-method","name":"key_for","abstract":false,"args":[{"name":"value","external_name":"value","restriction":""}],"args_string":"(value) : K","args_html":"(value) : K","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":403,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L403"},"def":{"name":"key_for","args":[{"name":"value","external_name":"value","restriction":""}],"return_type":"K","visibility":"Public","body":"key_for(value) do\n  raise(KeyError.new(\"Missing hash key for value: #{value}\"))\nend"}},{"html_id":"key_for(value,&)-instance-method","name":"key_for","abstract":false,"args":[{"name":"value","external_name":"value","restriction":""}],"args_string":"(value, &)","args_html":"(value, &)","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":411,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L411"},"def":{"name":"key_for","args":[{"name":"value","external_name":"value","restriction":""}],"yields":1,"block_arity":1,"visibility":"Public","body":"each do |k, v|\n  if v == value\n    return k\n  end\nend\nyield value\n"}},{"html_id":"key_for?(value):K|Nil-instance-method","name":"key_for?","abstract":false,"args":[{"name":"value","external_name":"value","restriction":""}],"args_string":"(value) : K | Nil","args_html":"(value) : K | Nil","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":407,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L407"},"def":{"name":"key_for?","args":[{"name":"value","external_name":"value","restriction":""}],"return_type":"K | ::Nil","visibility":"Public","body":"key_for(value) do\n  nil\nend"}},{"html_id":"keys:Array(K)-instance-method","name":"keys","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":379,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L379"},"def":{"name":"keys","return_type":"Array(K)","visibility":"Public","body":"map(&.[](0))"}},{"html_id":"last_key:K-instance-method","name":"last_key","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":680,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L680"},"def":{"name":"last_key","return_type":"K","visibility":"Public","body":"node = last_node\nnode ? node.not_nil!.key : raise(\"Can't get last key of empty SortedMap\")\n"}},{"html_id":"last_key?:K|Nil-instance-method","name":"last_key?","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":685,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L685"},"def":{"name":"last_key?","return_type":"K | ::Nil","visibility":"Public","body":"node = last_node\nnode ? node.not_nil!.key : nil\n"}},{"html_id":"last_value:K-instance-method","name":"last_value","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":690,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L690"},"def":{"name":"last_value","return_type":"K","visibility":"Public","body":"node = last_node\nnode ? node.not_nil!.value : raise(\"Can't get last value of empty SortedMap\")\n"}},{"html_id":"last_value?:K|Nil-instance-method","name":"last_value?","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":695,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L695"},"def":{"name":"last_value?","return_type":"K | ::Nil","visibility":"Public","body":"node = last_node\nnode ? node.not_nil!.value : nil\n"}},{"html_id":"less_equal_index(key:K):Int32|Nil-instance-method","name":"less_equal_index","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Int32 | Nil","args_html":"(key : K) : Int32 | Nil","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":746,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L746"},"def":{"name":"less_equal_index","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"Int32 | ::Nil","visibility":"Public","body":"(less_equal_item_with_index(key))[1]"}},{"html_id":"less_equal_item(key:K):Tuple(K,V)|Nil-instance-method","name":"less_equal_item","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Tuple(K, V) | Nil","args_html":"(key : K) : Tuple(K, V) | Nil","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":742,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L742"},"def":{"name":"less_equal_item","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"::Tuple(K, V) | ::Nil","visibility":"Public","body":"(less_equal_item_with_index(key))[0]"}},{"html_id":"less_equal_item_with_index(key:K):Tuple(Tuple(K,V)|Nil,Int32|Nil)-instance-method","name":"less_equal_item_with_index","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Tuple(Tuple(K, V) | Nil, Int32 | Nil)","args_html":"(key : K) : Tuple(Tuple(K, V) | Nil, Int32 | Nil)","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":727,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L727"},"def":{"name":"less_equal_item_with_index","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"::Tuple(::Tuple(K, V) | ::Nil, Int32 | ::Nil)","visibility":"Public","body":"if @root.nil?\n  return {nil, nil}\nend\nnode, bound = lower_bound_impl(key)\nif node && (key == node.not_nil!.key)\n  { {node.not_nil!.key, node.not_nil!.value}, bound }\nelse\n  if bound == 0\n    {nil, nil}\n  else\n    node = (bound == size ? last_node : node.not_nil!.prev).not_nil!\n    { {node.key, node.value}, bound - 1 }\n  end\nend\n"}},{"html_id":"less_index(key:K):Int32|Nil-instance-method","name":"less_index","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Int32 | Nil","args_html":"(key : K) : Int32 | Nil","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":723,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L723"},"def":{"name":"less_index","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"Int32 | ::Nil","visibility":"Public","body":"(less_item_with_index(key))[1]"}},{"html_id":"less_item(key:K):Tuple(K,V)|Nil-instance-method","name":"less_item","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Tuple(K, V) | Nil","args_html":"(key : K) : Tuple(K, V) | Nil","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":719,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L719"},"def":{"name":"less_item","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"::Tuple(K, V) | ::Nil","visibility":"Public","body":"(less_item_with_index(key))[0]"}},{"html_id":"less_item_with_index(key:K):Tuple(Tuple(K,V)|Nil,Int32|Nil)-instance-method","name":"less_item_with_index","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Tuple(Tuple(K, V) | Nil, Int32 | Nil)","args_html":"(key : K) : Tuple(Tuple(K, V) | Nil, Int32 | Nil)","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":708,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L708"},"def":{"name":"less_item_with_index","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"::Tuple(::Tuple(K, V) | ::Nil, Int32 | ::Nil)","visibility":"Public","body":"if @root.nil?\n  return {nil, nil}\nend\nnode, bound = lower_bound_impl(key)\nif bound == 0\n  {nil, nil}\nelse\n  node = (bound == size ? last_node : node.not_nil!.prev).not_nil!\n  { {node.key, node.value}, bound - 1 }\nend\n"}},{"html_id":"lower_bound(key:K):Int32-instance-method","name":"lower_bound","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Int32","args_html":"(key : K) : Int32","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":700,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L700"},"def":{"name":"lower_bound","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"Int32","visibility":"Public","body":"(lower_bound_impl(key))[1]"}},{"html_id":"max-instance-method","name":"max","doc":"Returns the element with the maximum value in the collection.\n\nIt compares using `>` so it will work for any type that supports that method.\n\n```\n[1, 2, 3].max        # => 3\n[\"Alice\", \"Bob\"].max # => \"Bob\"\n```\n\nRaises `Enumerable::EmptyError` if the collection is empty.","summary":"<p>Returns the element with the maximum value in the collection.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":787,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L787"},"def":{"name":"max","visibility":"Public","body":"node = last_node\nif node.nil?\n  return nil\nend\n{node.not_nil!.key, node.not_nil!.value}\n"}},{"html_id":"min-instance-method","name":"min","doc":"Returns the element with the minimum value in the collection.\n\nIt compares using `<` so it will work for any type that supports that method.\n\n```\n[1, 2, 3].min        # => 1\n[\"Alice\", \"Bob\"].min # => \"Alice\"\n```\n\nRaises `Enumerable::EmptyError` if the collection is empty.","summary":"<p>Returns the element with the minimum value in the collection.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":793,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L793"},"def":{"name":"min","visibility":"Public","body":"node = first_node\nif node.nil?\n  return nil\nend\n{node.not_nil!.key, node.not_nil!.value}\n"}},{"html_id":"pop:Tuple(K,V)-instance-method","name":"pop","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":487,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L487"},"def":{"name":"pop","return_type":"Tuple(K, V)","visibility":"Public","body":"pop do\n  raise(IndexError.new)\nend"}},{"html_id":"pop(&)-instance-method","name":"pop","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":491,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L491"},"def":{"name":"pop","yields":0,"block_arity":0,"visibility":"Public","body":"key = key_at?(size - 1)\nif key\n  delete(key)\nelse\n  yield\nend\n"}},{"html_id":"pop?:Tuple(K,V)|Nil-instance-method","name":"pop?","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":500,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L500"},"def":{"name":"pop?","return_type":"::Tuple(K, V) | ::Nil","visibility":"Public","body":"pop do\n  nil\nend"}},{"html_id":"proper_superset_of?(other:Hash):Bool-instance-method","name":"proper_superset_of?","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Hash"}],"args_string":"(other : Hash) : Bool","args_html":"(other : Hash) : Bool","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":516,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L516"},"def":{"name":"proper_superset_of?","args":[{"name":"other","external_name":"other","restriction":"Hash"}],"return_type":"Bool","visibility":"Public","body":"other.proper_subset_of?(self)"}},{"html_id":"put(key:K,value:V,&)-instance-method","name":"put","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"},{"name":"value","external_name":"value","restriction":"V"}],"args_string":"(key : K, value : V, &)","args_html":"(key : K, value : V, &)","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":284,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L284"},"def":{"name":"put","args":[{"name":"key","external_name":"key","restriction":"K"},{"name":"value","external_name":"value","restriction":"V"}],"yields":1,"block_arity":1,"visibility":"Public","body":"updated_item = upsert(key, value)\nupdated_item ? updated_item.value : yield key\n"}},{"html_id":"reject(&:K,V->):SortedMultimap(K,V)-instance-method","name":"reject","doc":"Returns an `Array` with all the elements in the collection for which\nthe passed block is falsey.\n\n```\n[1, 2, 3, 4, 5, 6].reject { |i| i % 2 == 0 } # => [1, 3, 5]\n```","summary":"<p>Returns an <code>Array</code> with all the elements in the collection for which the passed block is falsey.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":607,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L607"},"def":{"name":"reject","yields":2,"block_arity":2,"block_arg":{"name":"","external_name":"","restriction":"(K, V ->)"},"return_type":"SortedMultimap(K, V)","visibility":"Public","body":"each_with_object(SortedMultimap(K, V).new) do |__arg3, memo|\n  key = __arg3[0]\n  value = __arg3[1]\n  if yield key, value\n  else\n    memo[key] = value\n  end\nend"}},{"html_id":"reject(*keys):SortedMultimap(K,V)-instance-method","name":"reject","abstract":false,"args":[{"name":"keys","external_name":"keys","restriction":""}],"args_string":"(*keys) : SortedMultimap(K, V)","args_html":"(*keys) : <a href=\"../AVLTree/SortedMultimap.html\">SortedMultimap</a>(K, V)","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":620,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L620"},"def":{"name":"reject","args":[{"name":"keys","external_name":"keys","restriction":""}],"splat_index":0,"return_type":"SortedMultimap(K, V)","visibility":"Public","body":"map = self.clone\nmap.reject(*keys)\n"}},{"html_id":"reject!(&:K,V->):SortedMultimap(K,V)-instance-method","name":"reject!","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":613,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L613"},"def":{"name":"reject!","yields":2,"block_arity":2,"block_arg":{"name":"","external_name":"","restriction":"(K, V ->)"},"return_type":"SortedMultimap(K, V)","visibility":"Public","body":"each do |key, value|\n  if yield key, value\n    delete(key)\n  end\nend\nself\n"}},{"html_id":"reject!(keys:Enumerable):SortedMultimap(K,V)-instance-method","name":"reject!","abstract":false,"args":[{"name":"keys","external_name":"keys","restriction":"Enumerable"}],"args_string":"(keys : Enumerable) : SortedMultimap(K, V)","args_html":"(keys : <a href=\"../Enumerable.html\">Enumerable</a>) : <a href=\"../AVLTree/SortedMultimap.html\">SortedMultimap</a>(K, V)","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":625,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L625"},"def":{"name":"reject!","args":[{"name":"keys","external_name":"keys","restriction":"Enumerable"}],"return_type":"SortedMultimap(K, V)","visibility":"Public","body":"keys.each do |key|\n  delete(key)\nend\nself\n"}},{"html_id":"reject!(*keys):SortedMultimap(K,V)-instance-method","name":"reject!","abstract":false,"args":[{"name":"keys","external_name":"keys","restriction":""}],"args_string":"(*keys) : SortedMultimap(K, V)","args_html":"(*keys) : <a href=\"../AVLTree/SortedMultimap.html\">SortedMultimap</a>(K, V)","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":630,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L630"},"def":{"name":"reject!","args":[{"name":"keys","external_name":"keys","restriction":""}],"splat_index":0,"return_type":"SortedMultimap(K, V)","visibility":"Public","body":"reject!(*keys)"}},{"html_id":"reverse_each(&:Tuple(K,V)->):Nil-instance-method","name":"reverse_each","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":580,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L580"},"def":{"name":"reverse_each","yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(::Tuple(K, V) ->)"},"return_type":"Nil","visibility":"Public","body":"iter = ReverseItemIterator(K, V).new(self)\niter.each do |key_and_value|\n  yield key_and_value\nend\n"}},{"html_id":"reverse_each-instance-method","name":"reverse_each","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":585,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L585"},"def":{"name":"reverse_each","visibility":"Public","body":"ReverseItemIterator(K, V).new(self)"}},{"html_id":"reverse_each_key(&:K->):Nil-instance-method","name":"reverse_each_key","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":589,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L589"},"def":{"name":"reverse_each_key","yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(K ->)"},"return_type":"Nil","visibility":"Public","body":"iter = ReverseKeyIterator(K, V).new(self)\niter.reverse_each do |key|\n  yield key\nend\n"}},{"html_id":"reverse_each_key-instance-method","name":"reverse_each_key","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":594,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L594"},"def":{"name":"reverse_each_key","visibility":"Public","body":"ReverseKeyIterator(K, V).new(self)"}},{"html_id":"reverse_each_value(&:V->):Nil-instance-method","name":"reverse_each_value","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":598,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L598"},"def":{"name":"reverse_each_value","yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(V ->)"},"return_type":"Nil","visibility":"Public","body":"iter = ReverseValueIterator(K, V).new(self)\niter.reverse_each do |value|\n  yield value\nend\n"}},{"html_id":"reverse_each_value-instance-method","name":"reverse_each_value","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":603,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L603"},"def":{"name":"reverse_each_value","visibility":"Public","body":"ReverseValueIterator(K, V).new(self)"}},{"html_id":"rindex(key:K):Int32|Nil-instance-method","name":"rindex","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Int32 | Nil","args_html":"(key : K) : Int32 | Nil","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":809,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L809"},"def":{"name":"rindex","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"Int32 | ::Nil","visibility":"Public","body":"node, bound = upper_bound_impl(key)\nif bound == size\n  node = last_node\nend\nif node.nil?\n  return nil\nend\nif node.not_nil!.prev.nil?\n  return nil\nend\nnode.not_nil!.prev.not_nil!.key == key ? bound - 1 : nil\n"}},{"html_id":"rindex!(key:K):Int32-instance-method","name":"rindex!","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Int32","args_html":"(key : K) : Int32","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":819,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L819"},"def":{"name":"rindex!","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"Int32","visibility":"Public","body":"node, bound = upper_bound_impl(key)\nif bound == size\n  node = last_node\nend\nif node.nil?\n  return nil\nend\nif node.not_nil!.prev.nil?\n  return nil\nend\nnode.not_nil!.prev.not_nil!.key == key ? bound - 1 : raise(Enumerable::NotFoundError.new)\n"}},{"html_id":"select(keys:Enumerable):SortedMultimap(K,V)-instance-method","name":"select","abstract":false,"args":[{"name":"keys","external_name":"keys","restriction":"Enumerable"}],"args_string":"(keys : Enumerable) : SortedMultimap(K, V)","args_html":"(keys : <a href=\"../Enumerable.html\">Enumerable</a>) : <a href=\"../AVLTree/SortedMultimap.html\">SortedMultimap</a>(K, V)","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":634,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L634"},"def":{"name":"select","args":[{"name":"keys","external_name":"keys","restriction":"Enumerable"}],"return_type":"SortedMultimap(K, V)","visibility":"Public","body":"keys.each_with_object(SortedMultimap(K, V).new) do |key, memo|\n  value = self[key]?\n  if value\n    memo[key] = value\n  end\nend"}},{"html_id":"select(*keys):SortedMultimap(K,V)-instance-method","name":"select","abstract":false,"args":[{"name":"keys","external_name":"keys","restriction":""}],"args_string":"(*keys) : SortedMultimap(K, V)","args_html":"(*keys) : <a href=\"../AVLTree/SortedMultimap.html\">SortedMultimap</a>(K, V)","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":641,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L641"},"def":{"name":"select","args":[{"name":"keys","external_name":"keys","restriction":""}],"splat_index":0,"return_type":"SortedMultimap(K, V)","visibility":"Public","body":"self.select(keys)"}},{"html_id":"select!(keys:Indexable):self-instance-method","name":"select!","abstract":false,"args":[{"name":"keys","external_name":"keys","restriction":"Indexable"}],"args_string":"(keys : Indexable) : self","args_html":"(keys : Indexable) : <span class=\"k\">self</span>","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":645,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L645"},"def":{"name":"select!","args":[{"name":"keys","external_name":"keys","restriction":"Indexable"}],"return_type":"self","visibility":"Public","body":"each_key do |key|\n  if k.in?(keys)\n  else\n    delete(key)\n  end\nend\nself\n"}},{"html_id":"select!(keys:Enumerable):self-instance-method","name":"select!","abstract":false,"args":[{"name":"keys","external_name":"keys","restriction":"Enumerable"}],"args_string":"(keys : Enumerable) : self","args_html":"(keys : <a href=\"../Enumerable.html\">Enumerable</a>) : <span class=\"k\">self</span>","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":650,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L650"},"def":{"name":"select!","args":[{"name":"keys","external_name":"keys","restriction":"Enumerable"}],"return_type":"self","visibility":"Public","body":"key_set = keys.to_set\neach_key do |k|\n  if k.in?(key_set)\n  else\n    delete(k)\n  end\nend\nself\n"}},{"html_id":"select!(*keys):self-instance-method","name":"select!","abstract":false,"args":[{"name":"keys","external_name":"keys","restriction":""}],"args_string":"(*keys) : self","args_html":"(*keys) : <span class=\"k\">self</span>","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":656,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L656"},"def":{"name":"select!","args":[{"name":"keys","external_name":"keys","restriction":""}],"splat_index":0,"return_type":"self","visibility":"Public","body":"select!(keys)"}},{"html_id":"shift:Tuple(K,V)-instance-method","name":"shift","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":470,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L470"},"def":{"name":"shift","return_type":"Tuple(K, V)","visibility":"Public","body":"delete_at(0) do\n  raise(IndexError.new)\nend"}},{"html_id":"shift(&)-instance-method","name":"shift","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":474,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L474"},"def":{"name":"shift","yields":0,"block_arity":0,"visibility":"Public","body":"key = key_at?(0)\nif key\n  delete(key)\nelse\n  yield\nend\n"}},{"html_id":"shift?:Tuple(K,V)|Nil-instance-method","name":"shift?","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":483,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L483"},"def":{"name":"shift?","return_type":"::Tuple(K, V) | ::Nil","visibility":"Public","body":"shift do\n  nil\nend"}},{"html_id":"size:Int32-instance-method","name":"size","doc":"Returns the number of elements in the collection.\n\n```\n[1, 2, 3, 4].size # => 4\n```","summary":"<p>Returns the number of elements in the collection.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":433,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L433"},"def":{"name":"size","return_type":"Int32","visibility":"Public","body":"@root ? @root.not_nil!.size : 0"}},{"html_id":"subset_of?(other:SortedMultimap(K,V)):Bool-instance-method","name":"subset_of?","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"SortedMultimap(K, V)"}],"args_string":"(other : SortedMultimap(K, V)) : Bool","args_html":"(other : <a href=\"../AVLTree/SortedMultimap.html\">SortedMultimap</a>(K, V)) : Bool","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":504,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L504"},"def":{"name":"subset_of?","args":[{"name":"other","external_name":"other","restriction":"SortedMultimap(K, V)"}],"return_type":"Bool","visibility":"Public","body":"if other.size < size\n  return false\nend\nall? do |key, value|\n  other_value = other.fetch(key) do\n    false\n  end\n  other_value == value\nend\n"}},{"html_id":"superset_of?(other:SortedMultimap(K,V)):Bool-instance-method","name":"superset_of?","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"SortedMultimap(K, V)"}],"args_string":"(other : SortedMultimap(K, V)) : Bool","args_html":"(other : <a href=\"../AVLTree/SortedMultimap.html\">SortedMultimap</a>(K, V)) : Bool","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":512,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L512"},"def":{"name":"superset_of?","args":[{"name":"other","external_name":"other","restriction":"SortedMultimap(K, V)"}],"return_type":"Bool","visibility":"Public","body":"other.subset_of?(self)"}},{"html_id":"to_a:Array(Tuple(K,V))-instance-method","name":"to_a","doc":"Returns an `Array` with all the elements in the collection.\n\n```\n(1..5).to_a # => [1, 2, 3, 4, 5]\n```","summary":"<p>Returns an <code>Array</code> with all the elements in the collection.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":853,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L853"},"def":{"name":"to_a","return_type":"Array(::Tuple(K, V))","visibility":"Public","body":"ary = Array(::Tuple(K, V)).new(self.size)\neach do |key, value|\n  ary << {key, value}\nend\nary\n"}},{"html_id":"to_hash-instance-method","name":"to_hash","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":861,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L861"},"def":{"name":"to_hash","visibility":"Public","body":"hash = Hash(K, V).new(@block)\neach do |key, value|\n  hash[key] = value\nend\nhash\n"}},{"html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Appends a short String representation of this object\nwhich includes its class name and its object address.\n\n```\nclass Person\n  def initialize(@name : String, @age : Int32)\n  end\nend\n\nPerson.new(\"John\", 32).to_s # => #<Person:0x10a199f20>\n```","summary":"<p>Appends a short String representation of this object which includes its class name and its object address.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":844,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L844"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"io << \"{\"\neach_with_index do |__arg4, i|\n  key = __arg4[0]\n  value = __arg4[1]\n  if i != 0\n    io << \", \"\n  end\n  ((io << key) << \" => \") << value\nend\nio << \"}\"\n"}},{"html_id":"unordered_each(node=@root,&:Tuple(K,V)->):Nil-instance-method","name":"unordered_each","abstract":false,"args":[{"name":"node","default_value":"@root","external_name":"node","restriction":""}],"args_string":"(node = @root, & : Tuple(K, V) -> ) : Nil","args_html":"(node = @root, & : Tuple(K, V) -> ) : Nil","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":569,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L569"},"def":{"name":"unordered_each","args":[{"name":"node","default_value":"@root","external_name":"node","restriction":""}],"yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(::Tuple(K, V) ->)"},"return_type":"Nil","visibility":"Public","body":"if node.nil?\n  return\nend\nnext_node = Deque.new([node.not_nil!])\nwhile !next_node.empty?\n  now = next_node.shift\n  yield({now.key, now.value})\n  if now.left\n    next_node << now.left!\n  end\n  if now.right\n    next_node << now.right!\n  end\nend\n"}},{"html_id":"unsafe_fetch(index:Int)-instance-method","name":"unsafe_fetch","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int)","args_html":"(index : Int)","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":320,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L320"},"def":{"name":"unsafe_fetch","args":[{"name":"index","external_name":"index","restriction":"Int"}],"visibility":"Public","body":"node = @root\nindex = index + 1\nloop do\n  left_size = (node.not_nil!.left ? node.not_nil!.left!.size : 0) + 1\n  if left_size == index\n    break\n  end\n  if index < left_size\n    node = node.not_nil!.left\n  else\n    node = node.not_nil!.right\n    index = index - left_size\n  end\nend\n{node.not_nil!.key, node.not_nil!.value}\n"}},{"html_id":"update(key:K,&:V->V):V-instance-method","name":"update","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K, & : V -> V) : V","args_html":"(key : K, & : V -> V) : V","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":308,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L308"},"def":{"name":"update","args":[{"name":"key","external_name":"key","restriction":"K"}],"yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(V -> V)"},"return_type":"V","visibility":"Public","body":"if has_key?(key)\n  self[key] = yield self[key]\nelse\n  if block = @block\n    default_value = block.call(self, key)\n    upsert(key, yield default_value)\n    defalut_value\n  else\n    raise(KeyError.new(\"Missing hash key: #{key.inspect}\"))\n  end\nend"}},{"html_id":"upper_bound(key:K):Int32-instance-method","name":"upper_bound","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"K"}],"args_string":"(key : K) : Int32","args_html":"(key : K) : Int32","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":704,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L704"},"def":{"name":"upper_bound","args":[{"name":"key","external_name":"key","restriction":"K"}],"return_type":"Int32","visibility":"Public","body":"(upper_bound_impl(key))[1]"}},{"html_id":"value_at(index:Int):K-instance-method","name":"value_at","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : K","args_html":"(index : Int) : K","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":369,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L369"},"def":{"name":"value_at","args":[{"name":"index","external_name":"index","restriction":"Int"}],"return_type":"K","visibility":"Public","body":"ret = at?(index)\nret ? ret.not_nil![1] : raise(IndexError.new)\n"}},{"html_id":"value_at?(index:Int):K-instance-method","name":"value_at?","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : K","args_html":"(index : Int) : K","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":374,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L374"},"def":{"name":"value_at?","args":[{"name":"index","external_name":"index","restriction":"Int"}],"return_type":"K","visibility":"Public","body":"item = at?(index)\nitem ? item.not_nil![1] : nil\n"}},{"html_id":"values:Array(V)-instance-method","name":"values","abstract":false,"location":{"filename":"src/avltree/sorted_multimap.cr","line_number":383,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L383"},"def":{"name":"values","return_type":"Array(V)","visibility":"Public","body":"map(&.[](1))"}},{"html_id":"values_at(*indices:Int)-instance-method","name":"values_at","abstract":false,"args":[{"name":"indices","external_name":"indices","restriction":"Int"}],"args_string":"(*indices : Int)","args_html":"(*indices : Int)","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":391,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L391"},"def":{"name":"values_at","args":[{"name":"indices","external_name":"indices","restriction":"Int"}],"splat_index":0,"visibility":"Public","body":"indices.map do |index|\n  self[index]\nend"}},{"html_id":"values_by_key(*keys:K)-instance-method","name":"values_by_key","abstract":false,"args":[{"name":"keys","external_name":"keys","restriction":"K"}],"args_string":"(*keys : K)","args_html":"(*keys : K)","location":{"filename":"src/avltree/sorted_multimap.cr","line_number":387,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multimap.cr#L387"},"def":{"name":"values_by_key","args":[{"name":"keys","external_name":"keys","restriction":"K"}],"splat_index":0,"visibility":"Public","body":"keys.map do |key|\n  self[key]\nend"}}]},{"html_id":"avltree/AVLTree/SortedMultiset","path":"AVLTree/SortedMultiset.html","kind":"struct","full_name":"AVLTree::SortedMultiset(T)","name":"SortedMultiset","abstract":false,"superclass":{"html_id":"avltree/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"avltree/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"avltree/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"},{"html_id":"avltree/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"avltree/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"avltree/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"avltree/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"avltree/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avltree/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avltree/sorted_multiset.cr","line_number":29,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L29"}],"repository_name":"avltree","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avltree/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"avltree/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"},{"html_id":"avltree/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"namespace":{"html_id":"avltree/AVLTree","kind":"module","full_name":"AVLTree","name":"AVLTree"},"doc":"`SortedMultiset` implements a collection of sorted values with possible duplicates.\n\n### Sample\n\n```\nrequire \"avltree\"\n\nmset = AVLTree::SortedMultiset(Int32).new\nmset << 3 << 1 << 4 << 1 << 5 << 9\n\nmset # => SortedMultiset{1, 1, 3, 4, 5, 9}\n\nmset[0] # => 1\nmset[1] # => 1\nmset[2] # => 3  (SortedMultiset#[k] returns the kth object)\n\nmset.lower_bound(-1) # => 0\nmset.lower_bound(2)  # => 2\nmset.lower_bound(3)  # => 2\nmset.lower_bound(9)  # => 5\nmset.lower_bound(10) # => 6\n\nmset.delete(1)\nmset # => SortedMultiset{1, 3, 4, 5, 9}\n```","summary":"<p><code><a href=\"../AVLTree/SortedMultiset.html\">SortedMultiset</a></code> implements a collection of sorted values with possible duplicates.</p>","constructors":[{"html_id":"new(other:Indexable(T))-class-method","name":"new","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Indexable(T)"}],"args_string":"(other : Indexable(T))","args_html":"(other : Indexable(T))","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":38,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L38"},"def":{"name":"new","args":[{"name":"other","external_name":"other","restriction":"Indexable(T)"}],"visibility":"Public","body":"SortedMultiset(T).new.concat(other)"}},{"html_id":"new(enumerable:Enumerable(T))-class-method","name":"new","abstract":false,"args":[{"name":"enumerable","external_name":"enumerable","restriction":"Enumerable(T)"}],"args_string":"(enumerable : Enumerable(T))","args_html":"(enumerable : <a href=\"../Enumerable.html\">Enumerable</a>(T))","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":42,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L42"},"def":{"name":"new","args":[{"name":"enumerable","external_name":"enumerable","restriction":"Enumerable(T)"}],"visibility":"Public","body":"SortedMultiset(T).new.concat(enumerable)"}},{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/avltree/sorted_multiset.cr","line_number":34,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L34"},"def":{"name":"new","visibility":"Public","body":"_ = SortedMultiset(T).allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"&(other:SortedMultiset)-instance-method","name":"&","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"SortedMultiset"}],"args_string":"(other : SortedMultiset)","args_html":"(other : <a href=\"../AVLTree/SortedMultiset.html\">SortedMultiset</a>)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":290,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L290"},"def":{"name":"&","args":[{"name":"other","external_name":"other","restriction":"SortedMultiset"}],"visibility":"Public","body":"smallest, largest = self, other\nif largest.size < smallest.size\n  smallest, largest = largest, smallest\nend\nset = SortedMultiset(T).new\nsmallest.each do |value|\n  if largest.includes?(value)\n    set << value\n  end\nend\nset\n"}},{"html_id":"+(other:SortedMultiset(U))forallU-instance-method","name":"+","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"SortedMultiset(U)"}],"args_string":"(other : SortedMultiset(U)) forall U","args_html":"(other : <a href=\"../AVLTree/SortedMultiset.html\">SortedMultiset</a>(U)) forall U","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":310,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L310"},"def":{"name":"+","args":[{"name":"other","external_name":"other","restriction":"SortedMultiset(U)"}],"visibility":"Public","body":"self | other"}},{"html_id":"-(other:SortedMultiset)-instance-method","name":"-","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"SortedMultiset"}],"args_string":"(other : SortedMultiset)","args_html":"(other : <a href=\"../AVLTree/SortedMultiset.html\">SortedMultiset</a>)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":314,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L314"},"def":{"name":"-","args":[{"name":"other","external_name":"other","restriction":"SortedMultiset"}],"visibility":"Public","body":"set = SortedMultiset(T).new\nunordered_each do |value|\n  if other.includes?(value)\n  else\n    set << value\n  end\nend\nset\n"}},{"html_id":"-(other:Enumerable)-instance-method","name":"-","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Enumerable"}],"args_string":"(other : Enumerable)","args_html":"(other : <a href=\"../Enumerable.html\">Enumerable</a>)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":322,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L322"},"def":{"name":"-","args":[{"name":"other","external_name":"other","restriction":"Enumerable"}],"visibility":"Public","body":"clone.subtract(other)"}},{"html_id":"<<(object:T)-instance-method","name":"<<","abstract":false,"args":[{"name":"object","external_name":"object","restriction":"T"}],"args_string":"(object : T)","args_html":"(object : T)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":159,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L159"},"def":{"name":"<<","args":[{"name":"object","external_name":"object","restriction":"T"}],"visibility":"Public","body":"add(object)"}},{"html_id":"==(other:SortedMultiset)-instance-method","name":"==","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"SortedMultiset"}],"args_string":"(other : SortedMultiset)","args_html":"(other : <a href=\"../AVLTree/SortedMultiset.html\">SortedMultiset</a>)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":356,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L356"},"def":{"name":"==","args":[{"name":"other","external_name":"other","restriction":"SortedMultiset"}],"visibility":"Public","body":"(same?(other)) || (@map == (other.@map))"}},{"html_id":"===(object:T)-instance-method","name":"===","abstract":false,"args":[{"name":"object","external_name":"object","restriction":"T"}],"args_string":"(object : T)","args_html":"(object : T)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":360,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L360"},"def":{"name":"===","args":[{"name":"object","external_name":"object","restriction":"T"}],"visibility":"Public","body":"includes?(object)"}},{"html_id":"^(other:SortedMultiset(U))forallU-instance-method","name":"^","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"SortedMultiset(U)"}],"args_string":"(other : SortedMultiset(U)) forall U","args_html":"(other : <a href=\"../AVLTree/SortedMultiset.html\">SortedMultiset</a>(U)) forall U","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":326,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L326"},"def":{"name":"^","args":[{"name":"other","external_name":"other","restriction":"SortedMultiset(U)"}],"visibility":"Public","body":"set = SortedMultiset(T | U).new\nunordered_each do |value|\n  if other.includes?(value)\n  else\n    set << value\n  end\nend\nother.unordered_each do |value|\n  if includes?(value)\n  else\n    set << value\n  end\nend\nset\n"}},{"html_id":"^(other:Enumerable(U))forallU-instance-method","name":"^","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Enumerable(U)"}],"args_string":"(other : Enumerable(U)) forall U","args_html":"(other : <a href=\"../Enumerable.html\">Enumerable</a>(U)) forall U","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":337,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L337"},"def":{"name":"^","args":[{"name":"other","external_name":"other","restriction":"Enumerable(U)"}],"visibility":"Public","body":"set = SortedMultiset(T | U).new(self)\nother.unordered_each do |value|\n  if includes?(value)\n    set.delete(value)\n  else\n    set << value\n  end\nend\nset\n"}},{"html_id":"|(other:SortedMultiset(U))forallU-instance-method","name":"|","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"SortedMultiset(U)"}],"args_string":"(other : SortedMultiset(U)) forall U","args_html":"(other : <a href=\"../AVLTree/SortedMultiset.html\">SortedMultiset</a>(U)) forall U","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":303,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L303"},"def":{"name":"|","args":[{"name":"other","external_name":"other","restriction":"SortedMultiset(U)"}],"visibility":"Public","body":"set = SortedMultiset(T | U).new\nunordered_each do |value|\n  set << value\nend\nother.unordered_each do |value|\n  set << value\nend\nset\n"}},{"html_id":"add(object:T)-instance-method","name":"add","abstract":false,"args":[{"name":"object","external_name":"object","restriction":"T"}],"args_string":"(object : T)","args_html":"(object : T)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":163,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L163"},"def":{"name":"add","args":[{"name":"object","external_name":"object","restriction":"T"}],"visibility":"Public","body":"@map[object] = nil\nself\n"}},{"html_id":"add?(object:T)-instance-method","name":"add?","abstract":false,"args":[{"name":"object","external_name":"object","restriction":"T"}],"args_string":"(object : T)","args_html":"(object : T)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":168,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L168"},"def":{"name":"add?","args":[{"name":"object","external_name":"object","restriction":"T"}],"visibility":"Public","body":"@map.put(object, nil) do\n  return true\nend\nfalse\n"}},{"html_id":"at(index:Int)-instance-method","name":"at","doc":"Returns the element at the *index*-th.","summary":"<p>Returns the element at the <em>index</em>-th.</p>","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int)","args_html":"(index : Int)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":61,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L61"},"def":{"name":"at","args":[{"name":"index","external_name":"index","restriction":"Int"}],"visibility":"Public","body":"fetch(index) do\n  raise(IndexError.new)\nend"}},{"html_id":"at(index:Int,&)-instance-method","name":"at","doc":"Returns the element at the *index*-th.","summary":"<p>Returns the element at the <em>index</em>-th.</p>","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int, &)","args_html":"(index : Int, &)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":66,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L66"},"def":{"name":"at","args":[{"name":"index","external_name":"index","restriction":"Int"}],"yields":1,"block_arity":1,"visibility":"Public","body":"fetch(index) do |i|\n  yield i\nend"}},{"html_id":"at?(index:Int)-instance-method","name":"at?","doc":"Like `at`, but returns `nil`\nif trying to access an element outside the multiset's range.","summary":"<p>Like <code><a href=\"../AVLTree/SortedMultiset.html#at%28index%3AInt%29-instance-method\">#at</a></code>, but returns <code>nil</code> if trying to access an element outside the multiset's range.</p>","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int)","args_html":"(index : Int)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":72,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L72"},"def":{"name":"at?","args":[{"name":"index","external_name":"index","restriction":"Int"}],"visibility":"Public","body":"fetch(index) do\n  nil\nend"}},{"html_id":"clear-instance-method","name":"clear","abstract":false,"location":{"filename":"src/avltree/sorted_multiset.cr","line_number":237,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L237"},"def":{"name":"clear","visibility":"Public","body":"@map.clear\nself\n"}},{"html_id":"clone-instance-method","name":"clone","abstract":false,"location":{"filename":"src/avltree/sorted_multiset.cr","line_number":370,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L370"},"def":{"name":"clone","visibility":"Public","body":"set = SortedMultiset(T).new\nset.map = map.clone\nset\n"}},{"html_id":"concat(elems)-instance-method","name":"concat","abstract":false,"args":[{"name":"elems","external_name":"elems","restriction":""}],"args_string":"(elems)","args_html":"(elems)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":173,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L173"},"def":{"name":"concat","args":[{"name":"elems","external_name":"elems","restriction":""}],"visibility":"Public","body":"elems.each do |elem|\n  self << elem\nend\nself\n"}},{"html_id":"count(range:Range(T|Nil,T|Nil))-instance-method","name":"count","doc":"Returns the number of elements in the set that exist within the range\n\n```\nset = AVLTree::SortedSet(Int32){3, 1, 4, 1, 5, 9}\nset.count(0..1).should eq 2\nset.count(0...1).should eq 0\nset.count(0..2).should eq 2\nset.count(0...2).should eq 2\nset.count(2..3).should eq 1\nset.count(2...3).should eq 0\nset.count(2..9).should eq 4\nset.count(2...9).should eq 3\nset.count(2...).should eq 4\nset.count(...).should eq 6\nset.count(...9).should eq 5\n```","summary":"<p>Returns the number of elements in the set that exist within the range</p>","abstract":false,"args":[{"name":"range","external_name":"range","restriction":"Range(T | ::Nil, T | ::Nil)"}],"args_string":"(range : Range(T | Nil, T | Nil))","args_html":"(range : Range(T | Nil, T | Nil))","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":144,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L144"},"def":{"name":"count","args":[{"name":"range","external_name":"range","restriction":"Range(T | ::Nil, T | ::Nil)"}],"visibility":"Public","body":"left = range.begin ? lower_bound(range.begin.not_nil!) : 0\nright = if range.end.nil?\n  size\nelse\n  if range.exclusive?\n    lower_bound(range.end.not_nil!)\n  else\n    upper_bound(range.end.not_nil!)\n  end\nend\nright - left\n"}},{"html_id":"count(object)-instance-method","name":"count","doc":"Returns the number of times that the passed item is present in the collection.\n\n```\n[1, 2, 3, 4].count(3) # => 1\n```","summary":"<p>Returns the number of times that the passed item is present in the collection.</p>","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object)","args_html":"(object)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":124,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L124"},"def":{"name":"count","args":[{"name":"object","external_name":"object","restriction":""}],"visibility":"Public","body":"(upper_bound(object)) - (lower_bound(object))"}},{"html_id":"delete(object)-instance-method","name":"delete","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object)","args_html":"(object)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":182,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L182"},"def":{"name":"delete","args":[{"name":"object","external_name":"object","restriction":""}],"visibility":"Public","body":"@map.delete(object)\nself\n"}},{"html_id":"delete_at(object)-instance-method","name":"delete_at","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object)","args_html":"(object)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":187,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L187"},"def":{"name":"delete_at","args":[{"name":"object","external_name":"object","restriction":""}],"visibility":"Public","body":"@map.delete_at(object)\nself\n"}},{"html_id":"delete_at?(object)-instance-method","name":"delete_at?","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object)","args_html":"(object)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":192,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L192"},"def":{"name":"delete_at?","args":[{"name":"object","external_name":"object","restriction":""}],"visibility":"Public","body":"@map.delete_at?(object)\nself\n"}},{"html_id":"dup-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nBecause `Value` is a value type, this method returns `self`,\nwhich already involves a shallow copy of this object because\nvalue types are passed by value.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_multiset.cr","line_number":364,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L364"},"def":{"name":"dup","visibility":"Public","body":"set = SortedMultiset(T).new\nset.map = map.dup\nset\n"}},{"html_id":"each(&)-instance-method","name":"each","doc":"Calls the given block once for each element in `self`, passing that\nelement as a parameter.\n\n```\na = [\"a\", \"b\", \"c\"]\na.each { |x| print x, \" -- \" }\n```\n\nproduces:\n\n```text\na -- b -- c --\n```","summary":"<p>Calls the given block once for each element in <code>self</code>, passing that element as a parameter.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_multiset.cr","line_number":246,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L246"},"def":{"name":"each","yields":1,"block_arity":1,"visibility":"Public","body":"@map.each_key do |key|\n  yield key\nend"}},{"html_id":"each-instance-method","name":"each","doc":"Must return an `Iterator` over the elements in this collection.","summary":"<p>Must return an <code>Iterator</code> over the elements in this collection.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_multiset.cr","line_number":252,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L252"},"def":{"name":"each","visibility":"Public","body":"@map.each_key"}},{"html_id":"empty?-instance-method","name":"empty?","doc":"Returns `true` if `self` is empty, `false` otherwise.\n\n```\n([] of Int32).empty? # => true\n([1]).empty?         # => false\n```","summary":"<p>Returns <code>true</code> if <code>self</code> is empty, <code>false</code> otherwise.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_multiset.cr","line_number":242,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L242"},"def":{"name":"empty?","visibility":"Public","body":"@map.empty?"}},{"html_id":"fetch(index:Int,&)-instance-method","name":"fetch","doc":"Returns the element at the given *index*, if in bounds,\notherwise executes the given block with the index and returns its value.\n\n```\na = [:foo, :bar]\na.fetch(0) { :default_value }    # => :foo\na.fetch(2) { :default_value }    # => :default_value\na.fetch(2) { |index| index * 3 } # => 6\n```","summary":"<p>Returns the element at the given <em>index</em>, if in bounds, otherwise executes the given block with the index and returns its value.</p>","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int, &)","args_html":"(index : Int, &)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":46,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L46"},"def":{"name":"fetch","args":[{"name":"index","external_name":"index","restriction":"Int"}],"yields":1,"block_arity":1,"visibility":"Public","body":"ret = @map.fetch_at(index) do\n  nil\nend\nret.nil? ? yield index : ret.not_nil![0]\n"}},{"html_id":"fetch(index:Int,default)-instance-method","name":"fetch","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"},{"name":"default","external_name":"default","restriction":""}],"args_string":"(index : Int, default)","args_html":"(index : Int, default)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":51,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L51"},"def":{"name":"fetch","args":[{"name":"index","external_name":"index","restriction":"Int"},{"name":"default","external_name":"default","restriction":""}],"visibility":"Public","body":"ret = @map.fetch_at(index) do\n  nil\nend\nret.nil? ? default : ret.not_nil![0]\n"}},{"html_id":"first-instance-method","name":"first","doc":"Returns the first element in the collection. Raises `Enumerable::EmptyError`\nif the collection is empty.\n\n```\n([1, 2, 3]).first   # => 1\n([] of Int32).first # raises Enumerable::EmptyError\n```","summary":"<p>Returns the first element in the collection.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_multiset.cr","line_number":76,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L76"},"def":{"name":"first","visibility":"Public","body":"@map.first_key"}},{"html_id":"first?-instance-method","name":"first?","doc":"Returns the first element in the collection.\nWhen the collection is empty, returns `nil`.\n\n```\n([1, 2, 3]).first?   # => 1\n([] of Int32).first? # => nil\n```","summary":"<p>Returns the first element in the collection.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_multiset.cr","line_number":80,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L80"},"def":{"name":"first?","visibility":"Public","body":"@map.first_key?"}},{"html_id":"greater_equal_index(object):Int32|Nil-instance-method","name":"greater_equal_index","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object) : Int32 | Nil","args_html":"(object) : Int32 | Nil","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":270,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L270"},"def":{"name":"greater_equal_index","args":[{"name":"object","external_name":"object","restriction":""}],"return_type":"Int32 | ::Nil","visibility":"Public","body":"@map.greater_equal_index(object)"}},{"html_id":"greater_equal_object(object):T|Nil-instance-method","name":"greater_equal_object","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object) : T | Nil","args_html":"(object) : T | Nil","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":270,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L270"},"def":{"name":"greater_equal_object","args":[{"name":"object","external_name":"object","restriction":""}],"return_type":"T | ::Nil","visibility":"Public","body":"item = @map.greater_equal_item(object)\nitem ? item.not_nil![0] : nil\n"}},{"html_id":"greater_equal_object_with_index(object):Tuple(T|Nil,Int32|Nil)-instance-method","name":"greater_equal_object_with_index","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object) : Tuple(T | Nil, Int32 | Nil)","args_html":"(object) : Tuple(T | Nil, Int32 | Nil)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":270,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L270"},"def":{"name":"greater_equal_object_with_index","args":[{"name":"object","external_name":"object","restriction":""}],"return_type":"::Tuple(T | ::Nil, Int32 | ::Nil)","visibility":"Public","body":"item, index = @map.greater_equal_item_with_index(object)\nif item\n  {item.not_nil![0], index}\nelse\n  {nil, nil}\nend\n"}},{"html_id":"greater_index(object):Int32|Nil-instance-method","name":"greater_index","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object) : Int32 | Nil","args_html":"(object) : Int32 | Nil","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":270,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L270"},"def":{"name":"greater_index","args":[{"name":"object","external_name":"object","restriction":""}],"return_type":"Int32 | ::Nil","visibility":"Public","body":"@map.greater_index(object)"}},{"html_id":"greater_object(object):T|Nil-instance-method","name":"greater_object","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object) : T | Nil","args_html":"(object) : T | Nil","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":270,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L270"},"def":{"name":"greater_object","args":[{"name":"object","external_name":"object","restriction":""}],"return_type":"T | ::Nil","visibility":"Public","body":"item = @map.greater_item(object)\nitem ? item.not_nil![0] : nil\n"}},{"html_id":"greater_object_with_index(object):Tuple(T|Nil,Int32|Nil)-instance-method","name":"greater_object_with_index","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object) : Tuple(T | Nil, Int32 | Nil)","args_html":"(object) : Tuple(T | Nil, Int32 | Nil)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":270,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L270"},"def":{"name":"greater_object_with_index","args":[{"name":"object","external_name":"object","restriction":""}],"return_type":"::Tuple(T | ::Nil, Int32 | ::Nil)","visibility":"Public","body":"item, index = @map.greater_item_with_index(object)\nif item\n  {item.not_nil![0], index}\nelse\n  {nil, nil}\nend\n"}},{"html_id":"hash(hasher)-instance-method","name":"hash","doc":"See `Object#hash(hasher)`","summary":"<p>See <code>Object#hash(hasher)</code></p>","abstract":false,"args":[{"name":"hasher","external_name":"hasher","restriction":""}],"args_string":"(hasher)","args_html":"(hasher)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":388,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L388"},"def":{"name":"hash","args":[{"name":"hasher","external_name":"hasher","restriction":""}],"visibility":"Public","body":"hasher = @map.hash(hasher)\nhasher\n"}},{"html_id":"includes?(object)-instance-method","name":"includes?","doc":"Returns `true` if the collection contains *obj*, `false` otherwise.\n\n```\n[1, 2, 3].includes?(2) # => true\n[1, 2, 3].includes?(5) # => false\n```","summary":"<p>Returns <code>true</code> if the collection contains <em>obj</em>, <code>false</code> otherwise.</p>","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object)","args_html":"(object)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":178,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L178"},"def":{"name":"includes?","args":[{"name":"object","external_name":"object","restriction":""}],"visibility":"Public","body":"@map.has_key?(object)"}},{"html_id":"index(object)-instance-method","name":"index","doc":"Returns the index of the first appearance of *object* in `self`\nstarting from the given *offset*, or `nil` if *object* is not in `self`.\n\n```\n[1, 2, 3, 1, 2, 3].index(2, offset: 2) # => 4\n```","summary":"<p>Returns the index of the first appearance of <em>object</em> in <code>self</code> starting from the given <em>offset</em>, or <code>nil</code> if <em>object</em> is not in <code>self</code>.</p>","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object)","args_html":"(object)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":108,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L108"},"def":{"name":"index","args":[{"name":"object","external_name":"object","restriction":""}],"visibility":"Public","body":"@map.index(object)"}},{"html_id":"index!(object)-instance-method","name":"index!","doc":"Returns the index of the first appearance of *obj* in `self`\nstarting from the given *offset*. Raises `Enumerable::NotFoundError` if\n*obj* is not in `self`.\n\n```\n[1, 2, 3, 1, 2, 3].index!(2, offset: 2) # => 4\n```","summary":"<p>Returns the index of the first appearance of <em>obj</em> in <code>self</code> starting from the given <em>offset</em>.</p>","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object)","args_html":"(object)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":112,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L112"},"def":{"name":"index!","args":[{"name":"object","external_name":"object","restriction":""}],"visibility":"Public","body":"@map.index!(object)"}},{"html_id":"inspect(io:IO):Nil-instance-method","name":"inspect","doc":"Appends this struct's name and instance variables names and values\nto the given IO.\n\n```\nstruct Point\n  def initialize(@x : Int32, @y : Int32)\n  end\nend\n\np1 = Point.new 1, 2\np1.to_s    # \"Point(@x=1, @y=2)\"\np1.inspect # \"Point(@x=1, @y=2)\"\n```","summary":"<p>Appends this struct's name and instance variables names and values to the given IO.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":380,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L380"},"def":{"name":"inspect","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"to_s(io)"}},{"html_id":"intersects?(other:SortedMultiset)-instance-method","name":"intersects?","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"SortedMultiset"}],"args_string":"(other : SortedMultiset)","args_html":"(other : <a href=\"../AVLTree/SortedMultiset.html\">SortedMultiset</a>)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":390,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L390"},"def":{"name":"intersects?","args":[{"name":"other","external_name":"other","restriction":"SortedMultiset"}],"visibility":"Public","body":"if size < other.size\n  any? do |o|\n    other.includes?(o)\n  end\nelse\n  other.any? do |o|\n    includes?(o)\n  end\nend"}},{"html_id":"last-instance-method","name":"last","doc":"Returns the last element of `self` if it's not empty, or raises `IndexError`.\n\n```\n([1, 2, 3]).last   # => 3\n([] of Int32).last # raises IndexError\n```","summary":"<p>Returns the last element of <code>self</code> if it's not empty, or raises <code>IndexError</code>.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_multiset.cr","line_number":84,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L84"},"def":{"name":"last","visibility":"Public","body":"@map.last_key"}},{"html_id":"last?-instance-method","name":"last?","doc":"Returns the last element of `self` if it's not empty, or `nil`.\n\n```\n([1, 2, 3]).last?   # => 3\n([] of Int32).last? # => nil\n```","summary":"<p>Returns the last element of <code>self</code> if it's not empty, or <code>nil</code>.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_multiset.cr","line_number":88,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L88"},"def":{"name":"last?","visibility":"Public","body":"@map.last_key?"}},{"html_id":"less_equal_index(object):Int32|Nil-instance-method","name":"less_equal_index","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object) : Int32 | Nil","args_html":"(object) : Int32 | Nil","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":270,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L270"},"def":{"name":"less_equal_index","args":[{"name":"object","external_name":"object","restriction":""}],"return_type":"Int32 | ::Nil","visibility":"Public","body":"@map.less_equal_index(object)"}},{"html_id":"less_equal_object(object):T|Nil-instance-method","name":"less_equal_object","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object) : T | Nil","args_html":"(object) : T | Nil","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":270,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L270"},"def":{"name":"less_equal_object","args":[{"name":"object","external_name":"object","restriction":""}],"return_type":"T | ::Nil","visibility":"Public","body":"item = @map.less_equal_item(object)\nitem ? item.not_nil![0] : nil\n"}},{"html_id":"less_equal_object_with_index(object):Tuple(T|Nil,Int32|Nil)-instance-method","name":"less_equal_object_with_index","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object) : Tuple(T | Nil, Int32 | Nil)","args_html":"(object) : Tuple(T | Nil, Int32 | Nil)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":270,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L270"},"def":{"name":"less_equal_object_with_index","args":[{"name":"object","external_name":"object","restriction":""}],"return_type":"::Tuple(T | ::Nil, Int32 | ::Nil)","visibility":"Public","body":"item, index = @map.less_equal_item_with_index(object)\nif item\n  {item.not_nil![0], index}\nelse\n  {nil, nil}\nend\n"}},{"html_id":"less_index(object):Int32|Nil-instance-method","name":"less_index","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object) : Int32 | Nil","args_html":"(object) : Int32 | Nil","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":270,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L270"},"def":{"name":"less_index","args":[{"name":"object","external_name":"object","restriction":""}],"return_type":"Int32 | ::Nil","visibility":"Public","body":"@map.less_index(object)"}},{"html_id":"less_object(object):T|Nil-instance-method","name":"less_object","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object) : T | Nil","args_html":"(object) : T | Nil","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":270,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L270"},"def":{"name":"less_object","args":[{"name":"object","external_name":"object","restriction":""}],"return_type":"T | ::Nil","visibility":"Public","body":"item = @map.less_item(object)\nitem ? item.not_nil![0] : nil\n"}},{"html_id":"less_object_with_index(object):Tuple(T|Nil,Int32|Nil)-instance-method","name":"less_object_with_index","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object) : Tuple(T | Nil, Int32 | Nil)","args_html":"(object) : Tuple(T | Nil, Int32 | Nil)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":270,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L270"},"def":{"name":"less_object_with_index","args":[{"name":"object","external_name":"object","restriction":""}],"return_type":"::Tuple(T | ::Nil, Int32 | ::Nil)","visibility":"Public","body":"item, index = @map.less_item_with_index(object)\nif item\n  {item.not_nil![0], index}\nelse\n  {nil, nil}\nend\n"}},{"html_id":"lower_bound(object):Int32-instance-method","name":"lower_bound","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object) : Int32","args_html":"(object) : Int32","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":262,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L262"},"def":{"name":"lower_bound","args":[{"name":"object","external_name":"object","restriction":""}],"return_type":"Int32","visibility":"Public","body":"@map.lower_bound(object)"}},{"html_id":"max-instance-method","name":"max","doc":"Returns the element with the maximum value in the collection.\n\nIt compares using `>` so it will work for any type that supports that method.\n\n```\n[1, 2, 3].max        # => 3\n[\"Alice\", \"Bob\"].max # => \"Bob\"\n```\n\nRaises `Enumerable::EmptyError` if the collection is empty.","summary":"<p>Returns the element with the maximum value in the collection.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_multiset.cr","line_number":100,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L100"},"def":{"name":"max","visibility":"Public","body":"last"}},{"html_id":"max?-instance-method","name":"max?","doc":"Like `max` but returns `nil` if the collection is empty.","summary":"<p>Like <code><a href=\"../AVLTree/SortedMultiset.html#max-instance-method\">#max</a></code> but returns <code>nil</code> if the collection is empty.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_multiset.cr","line_number":104,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L104"},"def":{"name":"max?","visibility":"Public","body":"last?"}},{"html_id":"min-instance-method","name":"min","doc":"Returns the element with the minimum value in the collection.\n\nIt compares using `<` so it will work for any type that supports that method.\n\n```\n[1, 2, 3].min        # => 1\n[\"Alice\", \"Bob\"].min # => \"Alice\"\n```\n\nRaises `Enumerable::EmptyError` if the collection is empty.","summary":"<p>Returns the element with the minimum value in the collection.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_multiset.cr","line_number":92,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L92"},"def":{"name":"min","visibility":"Public","body":"first"}},{"html_id":"min?-instance-method","name":"min?","doc":"Like `min` but returns `nil` if the collection is empty.","summary":"<p>Like <code><a href=\"../AVLTree/SortedMultiset.html#min-instance-method\">#min</a></code> but returns <code>nil</code> if the collection is empty.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_multiset.cr","line_number":96,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L96"},"def":{"name":"min?","visibility":"Public","body":"first?"}},{"html_id":"object_id-instance-method","name":"object_id","abstract":false,"location":{"filename":"src/avltree/sorted_multiset.cr","line_number":422,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L422"},"def":{"name":"object_id","visibility":"Public","body":"@map.object_id"}},{"html_id":"pop:T-instance-method","name":"pop","abstract":false,"location":{"filename":"src/avltree/sorted_multiset.cr","line_number":215,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L215"},"def":{"name":"pop","return_type":"T","visibility":"Public","body":"pop do\n  raise(IndexError.new)\nend"}},{"html_id":"pop(&)-instance-method","name":"pop","abstract":false,"location":{"filename":"src/avltree/sorted_multiset.cr","line_number":219,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L219"},"def":{"name":"pop","yields":0,"block_arity":0,"visibility":"Public","body":"object = last?\nif object\n  delete(object)\n  object\nelse\n  yield\nend\n"}},{"html_id":"pop?:T|Nil-instance-method","name":"pop?","abstract":false,"location":{"filename":"src/avltree/sorted_multiset.cr","line_number":229,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L229"},"def":{"name":"pop?","return_type":"T | ::Nil","visibility":"Public","body":"pop do\n  nil\nend"}},{"html_id":"pretty_print(pp):Nil-instance-method","name":"pretty_print","abstract":false,"args":[{"name":"pp","external_name":"pp","restriction":""}],"args_string":"(pp) : Nil","args_html":"(pp) : Nil","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":384,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L384"},"def":{"name":"pretty_print","args":[{"name":"pp","external_name":"pp","restriction":""}],"return_type":"Nil","visibility":"Public","body":"pp.list(\"SortedMultiset{\", self, \"}\")"}},{"html_id":"proper_subset_of?(other:SortedMultiset)-instance-method","name":"proper_subset_of?","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"SortedMultiset"}],"args_string":"(other : SortedMultiset)","args_html":"(other : <a href=\"../AVLTree/SortedMultiset.html\">SortedMultiset</a>)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":409,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L409"},"def":{"name":"proper_subset_of?","args":[{"name":"other","external_name":"other","restriction":"SortedMultiset"}],"visibility":"Public","body":"if other.size <= size\n  return false\nend\nall? do |value|\n  other.includes?(value)\nend\n"}},{"html_id":"proper_superset?(other:SortedMultiset)-instance-method","name":"proper_superset?","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"SortedMultiset"}],"args_string":"(other : SortedMultiset)","args_html":"(other : <a href=\"../AVLTree/SortedMultiset.html\">SortedMultiset</a>)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":418,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L418"},"def":{"name":"proper_superset?","args":[{"name":"other","external_name":"other","restriction":"SortedMultiset"}],"visibility":"Public","body":"other.proper_subset_of?(self)"}},{"html_id":"rindex(object)-instance-method","name":"rindex","doc":"Returns the index of the last appearance of *value* in `self`, or\n`nil` if the value is not in `self`.\n\nIf *offset* is given, it defines the position to _end_ the search\n(elements beyond this point are ignored).\n\n```\n[1, 2, 3, 2, 3].rindex(2)            # => 3\n[1, 2, 3, 2, 3].rindex(2, offset: 2) # => 1\n```","summary":"<p>Returns the index of the last appearance of <em>value</em> in <code>self</code>, or <code>nil</code> if the value is not in <code>self</code>.</p>","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object)","args_html":"(object)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":116,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L116"},"def":{"name":"rindex","args":[{"name":"object","external_name":"object","restriction":""}],"visibility":"Public","body":"@map.rindex(object)"}},{"html_id":"rindex!(object)-instance-method","name":"rindex!","doc":"Returns the index of the last appearance of *value* in `self`, or\n`nil` if the value is not in `self`.\n\nIf *offset* is given, it defines the position to _end_ the search\n(elements beyond this point are ignored).\n\n```\n[1, 2, 3, 2, 3].rindex(2)            # => 3\n[1, 2, 3, 2, 3].rindex(2, offset: 2) # => 1\n```\n\nRaises `Enumerable::NotFoundError` if *value* is not in `self`.","summary":"<p>Returns the index of the last appearance of <em>value</em> in <code>self</code>, or <code>nil</code> if the value is not in <code>self</code>.</p>","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object)","args_html":"(object)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":120,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L120"},"def":{"name":"rindex!","args":[{"name":"object","external_name":"object","restriction":""}],"visibility":"Public","body":"@map.rindex!(object)"}},{"html_id":"same?(other:SortedMultiset)-instance-method","name":"same?","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"SortedMultiset"}],"args_string":"(other : SortedMultiset)","args_html":"(other : <a href=\"../AVLTree/SortedMultiset.html\">SortedMultiset</a>)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":426,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L426"},"def":{"name":"same?","args":[{"name":"other","external_name":"other","restriction":"SortedMultiset"}],"visibility":"Public","body":"@map.same?(other.@map)"}},{"html_id":"shift:T-instance-method","name":"shift","abstract":false,"location":{"filename":"src/avltree/sorted_multiset.cr","line_number":197,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L197"},"def":{"name":"shift","return_type":"T","visibility":"Public","body":"shift do\n  raise(IndexError.new)\nend"}},{"html_id":"shift(&)-instance-method","name":"shift","abstract":false,"location":{"filename":"src/avltree/sorted_multiset.cr","line_number":201,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L201"},"def":{"name":"shift","yields":0,"block_arity":0,"visibility":"Public","body":"object = first?\nif object\n  delete(object)\n  object\nelse\n  yield\nend\n"}},{"html_id":"shift?:T|Nil-instance-method","name":"shift?","abstract":false,"location":{"filename":"src/avltree/sorted_multiset.cr","line_number":211,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L211"},"def":{"name":"shift?","return_type":"T | ::Nil","visibility":"Public","body":"shift do\n  nil\nend"}},{"html_id":"size-instance-method","name":"size","doc":"Returns the number of elements in this container.","summary":"<p>Returns the number of elements in this container.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_multiset.cr","line_number":233,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L233"},"def":{"name":"size","visibility":"Public","body":"@map.size"}},{"html_id":"subset_of?(other:SortedMultiset)-instance-method","name":"subset_of?","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"SortedMultiset"}],"args_string":"(other : SortedMultiset)","args_html":"(other : <a href=\"../AVLTree/SortedMultiset.html\">SortedMultiset</a>)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":404,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L404"},"def":{"name":"subset_of?","args":[{"name":"other","external_name":"other","restriction":"SortedMultiset"}],"visibility":"Public","body":"if other.size < size\n  return false\nend\nall? do |value|\n  other.includes?(value)\nend\n"}},{"html_id":"subtract(other:Enumerable)-instance-method","name":"subtract","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Enumerable"}],"args_string":"(other : Enumerable)","args_html":"(other : <a href=\"../Enumerable.html\">Enumerable</a>)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":349,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L349"},"def":{"name":"subtract","args":[{"name":"other","external_name":"other","restriction":"Enumerable"}],"visibility":"Public","body":"other.unordered_each do |value|\n  delete(value)\nend\nself\n"}},{"html_id":"superset_of?(other:SortedMultiset)-instance-method","name":"superset_of?","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"SortedMultiset"}],"args_string":"(other : SortedMultiset)","args_html":"(other : <a href=\"../AVLTree/SortedMultiset.html\">SortedMultiset</a>)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":414,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L414"},"def":{"name":"superset_of?","args":[{"name":"other","external_name":"other","restriction":"SortedMultiset"}],"visibility":"Public","body":"other.subset_of?(self)"}},{"html_id":"to_a-instance-method","name":"to_a","doc":"Returns an `Array` with all the elements in the collection.\n\n```\n{1, 2, 3}.to_a # => [1, 2, 3]\n```","summary":"<p>Returns an <code>Array</code> with all the elements in the collection.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_multiset.cr","line_number":376,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L376"},"def":{"name":"to_a","visibility":"Public","body":"@map.keys"}},{"html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Same as `#inspect(io)`.","summary":"<p>Same as <code><a href=\"../AVLTree/SortedMultiset.html#inspect%28io%3AIO%29%3ANil-instance-method\">#inspect(io)</a></code>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":398,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L398"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"io << \"SortedMultiset{\"\njoin(io, \", \", &.inspect(io))\nio << '}'\n"}},{"html_id":"unordered_each(&)-instance-method","name":"unordered_each","abstract":false,"location":{"filename":"src/avltree/sorted_multiset.cr","line_number":256,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L256"},"def":{"name":"unordered_each","yields":1,"block_arity":1,"visibility":"Public","body":"@map.unordered_each do |key, _|\n  yield key\nend"}},{"html_id":"unsafe_fetch(index:Int)-instance-method","name":"unsafe_fetch","doc":"Returns the element at the given *index*, without doing any bounds check.\n\n`Indexable` makes sure to invoke this method with *index* in `0...size`,\nso converting negative indices to positive ones is not needed here.\n\nClients never invoke this method directly. Instead, they access\nelements with `#[](index)` and `#[]?(index)`.\n\nThis method should only be directly invoked if you are absolutely\nsure the index is in bounds, to avoid a bounds check for a small boost\nof performance.","summary":"<p>Returns the element at the given <em>index</em>, without doing any bounds check.</p>","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int)","args_html":"(index : Int)","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":56,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L56"},"def":{"name":"unsafe_fetch","args":[{"name":"index","external_name":"index","restriction":"Int"}],"visibility":"Public","body":"(@map.unsafe_fetch(index))[0]"}},{"html_id":"upper_bound(object):Int32-instance-method","name":"upper_bound","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object) : Int32","args_html":"(object) : Int32","location":{"filename":"src/avltree/sorted_multiset.cr","line_number":266,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L266"},"def":{"name":"upper_bound","args":[{"name":"object","external_name":"object","restriction":""}],"return_type":"Int32","visibility":"Public","body":"@map.upper_bound(object)"}}]},{"html_id":"avltree/AVLTree/SortedSet","path":"AVLTree/SortedSet.html","kind":"struct","full_name":"AVLTree::SortedSet(T)","name":"SortedSet","abstract":false,"superclass":{"html_id":"avltree/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"avltree/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"avltree/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"},{"html_id":"avltree/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"avltree/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"avltree/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"avltree/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"avltree/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avltree/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avltree/sorted_set.cr","line_number":33,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L33"}],"repository_name":"avltree","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avltree/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"avltree/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"},{"html_id":"avltree/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"namespace":{"html_id":"avltree/AVLTree","kind":"module","full_name":"AVLTree","name":"AVLTree"},"doc":"`SortedSet` implements a Set that guarantees that its elements are yielded in sorted order\n(according to the return values of their #<=> methods) when iterating over them.\n\n`SortedSet` utilizes an internally implemented `SortedMap` using an AVL tree.\n\nWhile it often has slower computational speed compared to a Set implemented using a hash-based approach,\nit offers potential optimizations for operations related to order.\nFor example, retrieving the maximum and minimum values of the set can be performed in logarithmic time.\n\n`SortedSet` does not allow duplicates and only stores unique values.\n\n### Example\n\n```\nrequire \"avltree\"\n\nset = AVLTree::SortedSet.new [3, 1, 4]\nset.to_a == [1, 3, 4] # => true\nset.to_a == [3, 1, 4] # => false\n\nset << 1 << 5\nset                 # => SortedSet{1, 3, 4, 5}\nset.min             # => 1  (O(logN))\nset.max             # => 5  (O(logN))\nset.index(4)        # => 2  (O(logN))\nset.upper_bound(2)  # => 1  (O(logN))\nset.upper_bound(3)  # => 1  (O(logN))\nset.upper_bound(10) # => 4  (O(logN))\n```","summary":"<p><code><a href=\"../AVLTree/SortedSet.html\">SortedSet</a></code> implements a Set that guarantees that its elements are yielded in sorted order (according to the return values of their #&lt;=&gt; methods) when iterating over them.</p>","constructors":[{"html_id":"new(other:Indexable(T))-class-method","name":"new","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Indexable(T)"}],"args_string":"(other : Indexable(T))","args_html":"(other : Indexable(T))","location":{"filename":"src/avltree/sorted_set.cr","line_number":42,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L42"},"def":{"name":"new","args":[{"name":"other","external_name":"other","restriction":"Indexable(T)"}],"visibility":"Public","body":"SortedSet(T).new.concat(other)"}},{"html_id":"new(enumerable:Enumerable(T))-class-method","name":"new","abstract":false,"args":[{"name":"enumerable","external_name":"enumerable","restriction":"Enumerable(T)"}],"args_string":"(enumerable : Enumerable(T))","args_html":"(enumerable : <a href=\"../Enumerable.html\">Enumerable</a>(T))","location":{"filename":"src/avltree/sorted_set.cr","line_number":46,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L46"},"def":{"name":"new","args":[{"name":"enumerable","external_name":"enumerable","restriction":"Enumerable(T)"}],"visibility":"Public","body":"SortedSet(T).new.concat(enumerable)"}},{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/avltree/sorted_set.cr","line_number":38,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L38"},"def":{"name":"new","visibility":"Public","body":"_ = SortedSet(T).allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"&(other:Set)-instance-method","name":"&","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Set"}],"args_string":"(other : Set)","args_html":"(other : Set)","location":{"filename":"src/avltree/sorted_set.cr","line_number":315,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L315"},"def":{"name":"&","args":[{"name":"other","external_name":"other","restriction":"Set"}],"visibility":"Public","body":"smallest, largest = self, other\nif largest.size < smallest.size\n  smallest, largest = largest, smallest\nend\nset = SortedSet(T).new\nsmallest.each do |value|\n  if largest.includes?(value)\n    set << value\n  end\nend\nset\n"}},{"html_id":"+(other:Set(U))forallU-instance-method","name":"+","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Set(U)"}],"args_string":"(other : Set(U)) forall U","args_html":"(other : Set(U)) forall U","location":{"filename":"src/avltree/sorted_set.cr","line_number":335,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L335"},"def":{"name":"+","args":[{"name":"other","external_name":"other","restriction":"Set(U)"}],"visibility":"Public","body":"self | other"}},{"html_id":"-(other:Set)-instance-method","name":"-","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Set"}],"args_string":"(other : Set)","args_html":"(other : Set)","location":{"filename":"src/avltree/sorted_set.cr","line_number":339,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L339"},"def":{"name":"-","args":[{"name":"other","external_name":"other","restriction":"Set"}],"visibility":"Public","body":"set = SortedSet(T).new\nunordered_each do |value|\n  if other.includes?(value)\n  else\n    set << value\n  end\nend\nset\n"}},{"html_id":"-(other:Enumerable)-instance-method","name":"-","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Enumerable"}],"args_string":"(other : Enumerable)","args_html":"(other : <a href=\"../Enumerable.html\">Enumerable</a>)","location":{"filename":"src/avltree/sorted_set.cr","line_number":347,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L347"},"def":{"name":"-","args":[{"name":"other","external_name":"other","restriction":"Enumerable"}],"visibility":"Public","body":"clone.subtract(other)"}},{"html_id":"<<(object:T)-instance-method","name":"<<","abstract":false,"args":[{"name":"object","external_name":"object","restriction":"T"}],"args_string":"(object : T)","args_html":"(object : T)","location":{"filename":"src/avltree/sorted_set.cr","line_number":151,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L151"},"def":{"name":"<<","args":[{"name":"object","external_name":"object","restriction":"T"}],"visibility":"Public","body":"add(object)"}},{"html_id":"==(other:SortedSet)-instance-method","name":"==","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"SortedSet"}],"args_string":"(other : SortedSet)","args_html":"(other : <a href=\"../AVLTree/SortedSet.html\">SortedSet</a>)","location":{"filename":"src/avltree/sorted_set.cr","line_number":381,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L381"},"def":{"name":"==","args":[{"name":"other","external_name":"other","restriction":"SortedSet"}],"visibility":"Public","body":"(same?(other)) || (@map == (other.@map))"}},{"html_id":"===(object:T)-instance-method","name":"===","abstract":false,"args":[{"name":"object","external_name":"object","restriction":"T"}],"args_string":"(object : T)","args_html":"(object : T)","location":{"filename":"src/avltree/sorted_set.cr","line_number":385,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L385"},"def":{"name":"===","args":[{"name":"object","external_name":"object","restriction":"T"}],"visibility":"Public","body":"includes?(object)"}},{"html_id":"^(other:SortedSet(U))forallU-instance-method","name":"^","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"SortedSet(U)"}],"args_string":"(other : SortedSet(U)) forall U","args_html":"(other : <a href=\"../AVLTree/SortedSet.html\">SortedSet</a>(U)) forall U","location":{"filename":"src/avltree/sorted_set.cr","line_number":351,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L351"},"def":{"name":"^","args":[{"name":"other","external_name":"other","restriction":"SortedSet(U)"}],"visibility":"Public","body":"set = SortedSet(T | U).new\nunordered_each do |value|\n  if other.includes?(value)\n  else\n    set << value\n  end\nend\nother.unordered_each do |value|\n  if includes?(value)\n  else\n    set << value\n  end\nend\nset\n"}},{"html_id":"^(other:Enumerable(U))forallU-instance-method","name":"^","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Enumerable(U)"}],"args_string":"(other : Enumerable(U)) forall U","args_html":"(other : <a href=\"../Enumerable.html\">Enumerable</a>(U)) forall U","location":{"filename":"src/avltree/sorted_set.cr","line_number":362,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L362"},"def":{"name":"^","args":[{"name":"other","external_name":"other","restriction":"Enumerable(U)"}],"visibility":"Public","body":"set = SortedSet(T | U).new(self)\nother.each do |value|\n  if includes?(value)\n    set.delete(value)\n  else\n    set << value\n  end\nend\nset\n"}},{"html_id":"|(other:SortedSet(U))forallU-instance-method","name":"|","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"SortedSet(U)"}],"args_string":"(other : SortedSet(U)) forall U","args_html":"(other : <a href=\"../AVLTree/SortedSet.html\">SortedSet</a>(U)) forall U","location":{"filename":"src/avltree/sorted_set.cr","line_number":328,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L328"},"def":{"name":"|","args":[{"name":"other","external_name":"other","restriction":"SortedSet(U)"}],"visibility":"Public","body":"set = SortedSet(T | U).new\nunordered_each do |value|\n  set << value\nend\nother.unordered_each do |value|\n  set << value\nend\nset\n"}},{"html_id":"add(object:T)-instance-method","name":"add","abstract":false,"args":[{"name":"object","external_name":"object","restriction":"T"}],"args_string":"(object : T)","args_html":"(object : T)","location":{"filename":"src/avltree/sorted_set.cr","line_number":155,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L155"},"def":{"name":"add","args":[{"name":"object","external_name":"object","restriction":"T"}],"visibility":"Public","body":"@map[object] = nil\nself\n"}},{"html_id":"add?(object:T)-instance-method","name":"add?","abstract":false,"args":[{"name":"object","external_name":"object","restriction":"T"}],"args_string":"(object : T)","args_html":"(object : T)","location":{"filename":"src/avltree/sorted_set.cr","line_number":160,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L160"},"def":{"name":"add?","args":[{"name":"object","external_name":"object","restriction":"T"}],"visibility":"Public","body":"@map.put(object, nil) do\n  return true\nend\nfalse\n"}},{"html_id":"at(index:Int)-instance-method","name":"at","doc":"Returns the element at the *index*-th.","summary":"<p>Returns the element at the <em>index</em>-th.</p>","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int)","args_html":"(index : Int)","location":{"filename":"src/avltree/sorted_set.cr","line_number":65,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L65"},"def":{"name":"at","args":[{"name":"index","external_name":"index","restriction":"Int"}],"visibility":"Public","body":"fetch(index) do\n  raise(IndexError.new)\nend"}},{"html_id":"at(index:Int,&)-instance-method","name":"at","doc":"Returns the element at the *index*-th.","summary":"<p>Returns the element at the <em>index</em>-th.</p>","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int, &)","args_html":"(index : Int, &)","location":{"filename":"src/avltree/sorted_set.cr","line_number":70,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L70"},"def":{"name":"at","args":[{"name":"index","external_name":"index","restriction":"Int"}],"yields":1,"block_arity":1,"visibility":"Public","body":"fetch(index) do |i|\n  yield i\nend"}},{"html_id":"at?(index:Int)-instance-method","name":"at?","doc":"Like `at`, but returns `nil`\nif trying to access an element outside the set's range.","summary":"<p>Like <code><a href=\"../AVLTree/SortedSet.html#at%28index%3AInt%29-instance-method\">#at</a></code>, but returns <code>nil</code> if trying to access an element outside the set's range.</p>","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int)","args_html":"(index : Int)","location":{"filename":"src/avltree/sorted_set.cr","line_number":76,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L76"},"def":{"name":"at?","args":[{"name":"index","external_name":"index","restriction":"Int"}],"visibility":"Public","body":"fetch(index) do\n  nil\nend"}},{"html_id":"clear-instance-method","name":"clear","abstract":false,"location":{"filename":"src/avltree/sorted_set.cr","line_number":231,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L231"},"def":{"name":"clear","visibility":"Public","body":"@map.clear\nself\n"}},{"html_id":"clone-instance-method","name":"clone","abstract":false,"location":{"filename":"src/avltree/sorted_set.cr","line_number":395,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L395"},"def":{"name":"clone","visibility":"Public","body":"set = SortedSet(T).new\nset.map = map.clone\nset\n"}},{"html_id":"concat(elems)-instance-method","name":"concat","abstract":false,"args":[{"name":"elems","external_name":"elems","restriction":""}],"args_string":"(elems)","args_html":"(elems)","location":{"filename":"src/avltree/sorted_set.cr","line_number":165,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L165"},"def":{"name":"concat","args":[{"name":"elems","external_name":"elems","restriction":""}],"visibility":"Public","body":"elems.each do |elem|\n  self << elem\nend\nself\n"}},{"html_id":"count(range:Range(T|Nil,T|Nil))-instance-method","name":"count","doc":"Returns the number of elements in the set that exist within the range.\n\n```\nset = AVLTree::SortedSet(Int32){3, 1, 4, 1, 5, 9}\nset.count(2..3)  # => 1\nset.count(2...3) # => 0\nset.count(2..9)  # => 4\nset.count(2...9) # => 3\nset.count(2...)  # => 4\nset.count(...)   # => 5\nset.count(...9)  # => 4\n```","summary":"<p>Returns the number of elements in the set that exist within the range.</p>","abstract":false,"args":[{"name":"range","external_name":"range","restriction":"Range(T | ::Nil, T | ::Nil)"}],"args_string":"(range : Range(T | Nil, T | Nil))","args_html":"(range : Range(T | Nil, T | Nil))","location":{"filename":"src/avltree/sorted_set.cr","line_number":136,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L136"},"def":{"name":"count","args":[{"name":"range","external_name":"range","restriction":"Range(T | ::Nil, T | ::Nil)"}],"visibility":"Public","body":"left = range.begin ? lower_bound(range.begin.not_nil!) : 0\nright = if range.end.nil?\n  size\nelse\n  if range.exclusive?\n    lower_bound(range.end.not_nil!)\n  else\n    upper_bound(range.end.not_nil!)\n  end\nend\nright - left\n"}},{"html_id":"count(object)-instance-method","name":"count","doc":"Returns the number of times that the passed item is present in the collection.\n\n```\n[1, 2, 3, 4].count(3) # => 1\n```","summary":"<p>Returns the number of times that the passed item is present in the collection.</p>","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object)","args_html":"(object)","location":{"filename":"src/avltree/sorted_set.cr","line_number":120,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L120"},"def":{"name":"count","args":[{"name":"object","external_name":"object","restriction":""}],"visibility":"Public","body":"includes?(object) ? 1 : 0"}},{"html_id":"delete(object)-instance-method","name":"delete","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object)","args_html":"(object)","location":{"filename":"src/avltree/sorted_set.cr","line_number":174,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L174"},"def":{"name":"delete","args":[{"name":"object","external_name":"object","restriction":""}],"visibility":"Public","body":"@map.delete(object)\nself\n"}},{"html_id":"delete_at(index:Int,&)-instance-method","name":"delete_at","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int, &)","args_html":"(index : Int, &)","location":{"filename":"src/avltree/sorted_set.cr","line_number":179,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L179"},"def":{"name":"delete_at","args":[{"name":"index","external_name":"index","restriction":"Int"}],"yields":1,"block_arity":1,"visibility":"Public","body":"@map.delete_at(index) do\n  yield index\nend"}},{"html_id":"delete_at(index:Int)-instance-method","name":"delete_at","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int)","args_html":"(index : Int)","location":{"filename":"src/avltree/sorted_set.cr","line_number":183,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L183"},"def":{"name":"delete_at","args":[{"name":"index","external_name":"index","restriction":"Int"}],"visibility":"Public","body":"@map.delete_at(index)"}},{"html_id":"delete_at?(index:Int)-instance-method","name":"delete_at?","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int)","args_html":"(index : Int)","location":{"filename":"src/avltree/sorted_set.cr","line_number":187,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L187"},"def":{"name":"delete_at?","args":[{"name":"index","external_name":"index","restriction":"Int"}],"visibility":"Public","body":"@map.delete_at?(index)"}},{"html_id":"dup-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nBecause `Value` is a value type, this method returns `self`,\nwhich already involves a shallow copy of this object because\nvalue types are passed by value.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_set.cr","line_number":389,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L389"},"def":{"name":"dup","visibility":"Public","body":"set = SortedSet(T).new\nset.map = map.dup\nset\n"}},{"html_id":"each(&)-instance-method","name":"each","doc":"Calls the given block once for each element in `self`, passing that\nelement as a parameter.\n\n```\na = [\"a\", \"b\", \"c\"]\na.each { |x| print x, \" -- \" }\n```\n\nproduces:\n\n```text\na -- b -- c --\n```","summary":"<p>Calls the given block once for each element in <code>self</code>, passing that element as a parameter.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_set.cr","line_number":240,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L240"},"def":{"name":"each","yields":1,"block_arity":1,"visibility":"Public","body":"@map.each_key do |key|\n  yield key\nend"}},{"html_id":"each-instance-method","name":"each","doc":"Must return an `Iterator` over the elements in this collection.","summary":"<p>Must return an <code>Iterator</code> over the elements in this collection.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_set.cr","line_number":246,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L246"},"def":{"name":"each","visibility":"Public","body":"@map.each_key"}},{"html_id":"empty?-instance-method","name":"empty?","doc":"Returns `true` if `self` is empty, `false` otherwise.\n\n```\n([] of Int32).empty? # => true\n([1]).empty?         # => false\n```","summary":"<p>Returns <code>true</code> if <code>self</code> is empty, <code>false</code> otherwise.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_set.cr","line_number":236,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L236"},"def":{"name":"empty?","visibility":"Public","body":"@map.empty?"}},{"html_id":"fetch(index:Int,&)-instance-method","name":"fetch","doc":"Returns the element at the given *index*, if in bounds,\notherwise executes the given block with the index and returns its value.\n\n```\na = [:foo, :bar]\na.fetch(0) { :default_value }    # => :foo\na.fetch(2) { :default_value }    # => :default_value\na.fetch(2) { |index| index * 3 } # => 6\n```","summary":"<p>Returns the element at the given <em>index</em>, if in bounds, otherwise executes the given block with the index and returns its value.</p>","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int, &)","args_html":"(index : Int, &)","location":{"filename":"src/avltree/sorted_set.cr","line_number":50,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L50"},"def":{"name":"fetch","args":[{"name":"index","external_name":"index","restriction":"Int"}],"yields":1,"block_arity":1,"visibility":"Public","body":"ret = @map.fetch_at(index) do\n  nil\nend\nret.nil? ? yield index : ret.not_nil![0]\n"}},{"html_id":"fetch(index:Int,default)-instance-method","name":"fetch","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"},{"name":"default","external_name":"default","restriction":""}],"args_string":"(index : Int, default)","args_html":"(index : Int, default)","location":{"filename":"src/avltree/sorted_set.cr","line_number":55,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L55"},"def":{"name":"fetch","args":[{"name":"index","external_name":"index","restriction":"Int"},{"name":"default","external_name":"default","restriction":""}],"visibility":"Public","body":"ret = @map.fetch_at(index) do\n  nil\nend\nret.nil? ? default : ret.not_nil![0]\n"}},{"html_id":"first-instance-method","name":"first","doc":"Returns the first element in the collection. Raises `Enumerable::EmptyError`\nif the collection is empty.\n\n```\n([1, 2, 3]).first   # => 1\n([] of Int32).first # raises Enumerable::EmptyError\n```","summary":"<p>Returns the first element in the collection.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_set.cr","line_number":80,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L80"},"def":{"name":"first","visibility":"Public","body":"@map.first_key"}},{"html_id":"first?-instance-method","name":"first?","doc":"Returns the first element in the collection.\nWhen the collection is empty, returns `nil`.\n\n```\n([1, 2, 3]).first?   # => 1\n([] of Int32).first? # => nil\n```","summary":"<p>Returns the first element in the collection.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_set.cr","line_number":84,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L84"},"def":{"name":"first?","visibility":"Public","body":"@map.first_key?"}},{"html_id":"greater_equal_index(object):Int32|Nil-instance-method","name":"greater_equal_index","doc":"See `SortedMap#greater_equal_index`","summary":"<p>See <code><a href=\"../AVLTree/SortedMap.html#greater_equal_index%28key%3AK%29%3AInt32%7CNil-instance-method\">SortedMap#greater_equal_index</a></code></p>","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object) : Int32 | Nil","args_html":"(object) : Int32 | Nil","location":{"filename":"src/avltree/sorted_set.cr","line_number":292,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L292"},"def":{"name":"greater_equal_index","args":[{"name":"object","external_name":"object","restriction":""}],"return_type":"Int32 | ::Nil","visibility":"Public","body":"@map.greater_equal_index(object)"}},{"html_id":"greater_equal_object(object):T|Nil-instance-method","name":"greater_equal_object","doc":"See `SortedMap#greater_equal_item`","summary":"<p>See <code><a href=\"../AVLTree/SortedMap.html#greater_equal_item%28key%3AK%29%3ATuple%28K%2CV%29%7CNil-instance-method\">SortedMap#greater_equal_item</a></code></p>","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object) : T | Nil","args_html":"(object) : T | Nil","location":{"filename":"src/avltree/sorted_set.cr","line_number":292,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L292"},"def":{"name":"greater_equal_object","args":[{"name":"object","external_name":"object","restriction":""}],"return_type":"T | ::Nil","visibility":"Public","body":"item = @map.greater_equal_item(object)\nitem ? item.not_nil![0] : nil\n"}},{"html_id":"greater_equal_object_with_index(object):Tuple(T|Nil,Int32|Nil)-instance-method","name":"greater_equal_object_with_index","doc":"See `SortedMap#greater_equal_item_with_index`","summary":"<p>See <code><a href=\"../AVLTree/SortedMap.html#greater_equal_item_with_index%28key%3AK%29%3ATuple%28Tuple%28K%2CV%29%7CNil%2CInt32%7CNil%29-instance-method\">SortedMap#greater_equal_item_with_index</a></code></p>","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object) : Tuple(T | Nil, Int32 | Nil)","args_html":"(object) : Tuple(T | Nil, Int32 | Nil)","location":{"filename":"src/avltree/sorted_set.cr","line_number":292,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L292"},"def":{"name":"greater_equal_object_with_index","args":[{"name":"object","external_name":"object","restriction":""}],"return_type":"::Tuple(T | ::Nil, Int32 | ::Nil)","visibility":"Public","body":"item, index = @map.greater_equal_item_with_index(object)\nif item\n  {item.not_nil![0], index}\nelse\n  {nil, nil}\nend\n"}},{"html_id":"greater_index(object):Int32|Nil-instance-method","name":"greater_index","doc":"See `SortedMap#greater_index`","summary":"<p>See <code><a href=\"../AVLTree/SortedMap.html#greater_index%28key%3AK%29%3AInt32%7CNil-instance-method\">SortedMap#greater_index</a></code></p>","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object) : Int32 | Nil","args_html":"(object) : Int32 | Nil","location":{"filename":"src/avltree/sorted_set.cr","line_number":292,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L292"},"def":{"name":"greater_index","args":[{"name":"object","external_name":"object","restriction":""}],"return_type":"Int32 | ::Nil","visibility":"Public","body":"@map.greater_index(object)"}},{"html_id":"greater_object(object):T|Nil-instance-method","name":"greater_object","doc":"See `SortedMap#greater_item`","summary":"<p>See <code><a href=\"../AVLTree/SortedMap.html#greater_item%28key%3AK%29%3ATuple%28K%2CV%29%7CNil-instance-method\">SortedMap#greater_item</a></code></p>","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object) : T | Nil","args_html":"(object) : T | Nil","location":{"filename":"src/avltree/sorted_set.cr","line_number":292,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L292"},"def":{"name":"greater_object","args":[{"name":"object","external_name":"object","restriction":""}],"return_type":"T | ::Nil","visibility":"Public","body":"item = @map.greater_item(object)\nitem ? item.not_nil![0] : nil\n"}},{"html_id":"greater_object_with_index(object):Tuple(T|Nil,Int32|Nil)-instance-method","name":"greater_object_with_index","doc":"See `SortedMap#greater_item_with_index`","summary":"<p>See <code><a href=\"../AVLTree/SortedMap.html#greater_item_with_index%28key%3AK%29%3ATuple%28Tuple%28K%2CV%29%7CNil%2CInt32%7CNil%29-instance-method\">SortedMap#greater_item_with_index</a></code></p>","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object) : Tuple(T | Nil, Int32 | Nil)","args_html":"(object) : Tuple(T | Nil, Int32 | Nil)","location":{"filename":"src/avltree/sorted_set.cr","line_number":292,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L292"},"def":{"name":"greater_object_with_index","args":[{"name":"object","external_name":"object","restriction":""}],"return_type":"::Tuple(T | ::Nil, Int32 | ::Nil)","visibility":"Public","body":"item, index = @map.greater_item_with_index(object)\nif item\n  {item.not_nil![0], index}\nelse\n  {nil, nil}\nend\n"}},{"html_id":"hash(hasher)-instance-method","name":"hash","doc":"See `Object#hash(hasher)`","summary":"<p>See <code>Object#hash(hasher)</code></p>","abstract":false,"args":[{"name":"hasher","external_name":"hasher","restriction":""}],"args_string":"(hasher)","args_html":"(hasher)","location":{"filename":"src/avltree/sorted_set.cr","line_number":413,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L413"},"def":{"name":"hash","args":[{"name":"hasher","external_name":"hasher","restriction":""}],"visibility":"Public","body":"hasher = @map.hash(hasher)\nhasher\n"}},{"html_id":"includes?(object)-instance-method","name":"includes?","doc":"Returns `true` if the collection contains *obj*, `false` otherwise.\n\n```\n[1, 2, 3].includes?(2) # => true\n[1, 2, 3].includes?(5) # => false\n```","summary":"<p>Returns <code>true</code> if the collection contains <em>obj</em>, <code>false</code> otherwise.</p>","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object)","args_html":"(object)","location":{"filename":"src/avltree/sorted_set.cr","line_number":170,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L170"},"def":{"name":"includes?","args":[{"name":"object","external_name":"object","restriction":""}],"visibility":"Public","body":"@map.has_key?(object)"}},{"html_id":"index(object)-instance-method","name":"index","doc":"Returns the index of the first appearance of *object* in `self`\nstarting from the given *offset*, or `nil` if *object* is not in `self`.\n\n```\n[1, 2, 3, 1, 2, 3].index(2, offset: 2) # => 4\n```","summary":"<p>Returns the index of the first appearance of <em>object</em> in <code>self</code> starting from the given <em>offset</em>, or <code>nil</code> if <em>object</em> is not in <code>self</code>.</p>","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object)","args_html":"(object)","location":{"filename":"src/avltree/sorted_set.cr","line_number":112,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L112"},"def":{"name":"index","args":[{"name":"object","external_name":"object","restriction":""}],"visibility":"Public","body":"@map.index(object)"}},{"html_id":"index!(object)-instance-method","name":"index!","doc":"Returns the index of the first appearance of *obj* in `self`\nstarting from the given *offset*. Raises `Enumerable::NotFoundError` if\n*obj* is not in `self`.\n\n```\n[1, 2, 3, 1, 2, 3].index!(2, offset: 2) # => 4\n```","summary":"<p>Returns the index of the first appearance of <em>obj</em> in <code>self</code> starting from the given <em>offset</em>.</p>","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object)","args_html":"(object)","location":{"filename":"src/avltree/sorted_set.cr","line_number":116,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L116"},"def":{"name":"index!","args":[{"name":"object","external_name":"object","restriction":""}],"visibility":"Public","body":"@map.index!(object)"}},{"html_id":"inspect(io:IO):Nil-instance-method","name":"inspect","doc":"Appends this struct's name and instance variables names and values\nto the given IO.\n\n```\nstruct Point\n  def initialize(@x : Int32, @y : Int32)\n  end\nend\n\np1 = Point.new 1, 2\np1.to_s    # \"Point(@x=1, @y=2)\"\np1.inspect # \"Point(@x=1, @y=2)\"\n```","summary":"<p>Appends this struct's name and instance variables names and values to the given IO.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/avltree/sorted_set.cr","line_number":405,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L405"},"def":{"name":"inspect","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"to_s(io)"}},{"html_id":"intersects?(other:Set)-instance-method","name":"intersects?","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Set"}],"args_string":"(other : Set)","args_html":"(other : Set)","location":{"filename":"src/avltree/sorted_set.cr","line_number":415,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L415"},"def":{"name":"intersects?","args":[{"name":"other","external_name":"other","restriction":"Set"}],"visibility":"Public","body":"if size < other.size\n  any? do |o|\n    other.includes?(o)\n  end\nelse\n  other.any? do |o|\n    includes?(o)\n  end\nend"}},{"html_id":"last-instance-method","name":"last","doc":"Returns the last element of `self` if it's not empty, or raises `IndexError`.\n\n```\n([1, 2, 3]).last   # => 3\n([] of Int32).last # raises IndexError\n```","summary":"<p>Returns the last element of <code>self</code> if it's not empty, or raises <code>IndexError</code>.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_set.cr","line_number":88,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L88"},"def":{"name":"last","visibility":"Public","body":"@map.last_key"}},{"html_id":"last?-instance-method","name":"last?","doc":"Returns the last element of `self` if it's not empty, or `nil`.\n\n```\n([1, 2, 3]).last?   # => 3\n([] of Int32).last? # => nil\n```","summary":"<p>Returns the last element of <code>self</code> if it's not empty, or <code>nil</code>.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_set.cr","line_number":92,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L92"},"def":{"name":"last?","visibility":"Public","body":"@map.last_key?"}},{"html_id":"less_equal_index(object):Int32|Nil-instance-method","name":"less_equal_index","doc":"See `SortedMap#less_equal_index`","summary":"<p>See <code><a href=\"../AVLTree/SortedMap.html#less_equal_index%28key%3AK%29%3AInt32%7CNil-instance-method\">SortedMap#less_equal_index</a></code></p>","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object) : Int32 | Nil","args_html":"(object) : Int32 | Nil","location":{"filename":"src/avltree/sorted_set.cr","line_number":292,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L292"},"def":{"name":"less_equal_index","args":[{"name":"object","external_name":"object","restriction":""}],"return_type":"Int32 | ::Nil","visibility":"Public","body":"@map.less_equal_index(object)"}},{"html_id":"less_equal_object(object):T|Nil-instance-method","name":"less_equal_object","doc":"See `SortedMap#less_equal_item`","summary":"<p>See <code><a href=\"../AVLTree/SortedMap.html#less_equal_item%28key%3AK%29%3ATuple%28K%2CV%29%7CNil-instance-method\">SortedMap#less_equal_item</a></code></p>","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object) : T | Nil","args_html":"(object) : T | Nil","location":{"filename":"src/avltree/sorted_set.cr","line_number":292,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L292"},"def":{"name":"less_equal_object","args":[{"name":"object","external_name":"object","restriction":""}],"return_type":"T | ::Nil","visibility":"Public","body":"item = @map.less_equal_item(object)\nitem ? item.not_nil![0] : nil\n"}},{"html_id":"less_equal_object_with_index(object):Tuple(T|Nil,Int32|Nil)-instance-method","name":"less_equal_object_with_index","doc":"See `SortedMap#less_equal_item_with_index`","summary":"<p>See <code><a href=\"../AVLTree/SortedMap.html#less_equal_item_with_index%28key%3AK%29%3ATuple%28Tuple%28K%2CV%29%7CNil%2CInt32%7CNil%29-instance-method\">SortedMap#less_equal_item_with_index</a></code></p>","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object) : Tuple(T | Nil, Int32 | Nil)","args_html":"(object) : Tuple(T | Nil, Int32 | Nil)","location":{"filename":"src/avltree/sorted_set.cr","line_number":292,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L292"},"def":{"name":"less_equal_object_with_index","args":[{"name":"object","external_name":"object","restriction":""}],"return_type":"::Tuple(T | ::Nil, Int32 | ::Nil)","visibility":"Public","body":"item, index = @map.less_equal_item_with_index(object)\nif item\n  {item.not_nil![0], index}\nelse\n  {nil, nil}\nend\n"}},{"html_id":"less_index(object):Int32|Nil-instance-method","name":"less_index","doc":"See `SortedMap#less_index`","summary":"<p>See <code><a href=\"../AVLTree/SortedMap.html#less_index%28key%3AK%29%3AInt32%7CNil-instance-method\">SortedMap#less_index</a></code></p>","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object) : Int32 | Nil","args_html":"(object) : Int32 | Nil","location":{"filename":"src/avltree/sorted_set.cr","line_number":292,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L292"},"def":{"name":"less_index","args":[{"name":"object","external_name":"object","restriction":""}],"return_type":"Int32 | ::Nil","visibility":"Public","body":"@map.less_index(object)"}},{"html_id":"less_object(object):T|Nil-instance-method","name":"less_object","doc":"See `SortedMap#less_item`","summary":"<p>See <code><a href=\"../AVLTree/SortedMap.html#less_item%28key%3AK%29%3ATuple%28K%2CV%29%7CNil-instance-method\">SortedMap#less_item</a></code></p>","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object) : T | Nil","args_html":"(object) : T | Nil","location":{"filename":"src/avltree/sorted_set.cr","line_number":292,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L292"},"def":{"name":"less_object","args":[{"name":"object","external_name":"object","restriction":""}],"return_type":"T | ::Nil","visibility":"Public","body":"item = @map.less_item(object)\nitem ? item.not_nil![0] : nil\n"}},{"html_id":"less_object_with_index(object):Tuple(T|Nil,Int32|Nil)-instance-method","name":"less_object_with_index","doc":"See `SortedMap#less_item_with_index`","summary":"<p>See <code><a href=\"../AVLTree/SortedMap.html#less_item_with_index%28key%3AK%29%3ATuple%28Tuple%28K%2CV%29%7CNil%2CInt32%7CNil%29-instance-method\">SortedMap#less_item_with_index</a></code></p>","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object) : Tuple(T | Nil, Int32 | Nil)","args_html":"(object) : Tuple(T | Nil, Int32 | Nil)","location":{"filename":"src/avltree/sorted_set.cr","line_number":292,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L292"},"def":{"name":"less_object_with_index","args":[{"name":"object","external_name":"object","restriction":""}],"return_type":"::Tuple(T | ::Nil, Int32 | ::Nil)","visibility":"Public","body":"item, index = @map.less_item_with_index(object)\nif item\n  {item.not_nil![0], index}\nelse\n  {nil, nil}\nend\n"}},{"html_id":"lower_bound(object):Int32-instance-method","name":"lower_bound","doc":"```\nset = AVLTree::SortedSet(String){\"A\", \"B\", \"B\", \"C\", \"E\"}\nset                  # => SortedSet{\"A\", \"B\", \"C\", \"E\"}\nset.lower_bound(\"@\") # => 0\nset.lower_bound(\"A\") # => 0\nset.lower_bound(\"B\") # => 1\nset.lower_bound(\"C\") # => 2\nset.lower_bound(\"D\") # => 3\nset.lower_bound(\"E\") # => 3\nset.lower_bound(\"F\") # => 4\nset.lower_bound(\"Z\") # => 4\n```","summary":"<p><code>set = <a href=\"../AVLTree/SortedSet.html\">AVLTree::SortedSet</a>(String){&quot;A&quot;, &quot;B&quot;, &quot;B&quot;, &quot;C&quot;, &quot;E&quot;} set # =&gt; <a href=\"../AVLTree/SortedSet.html\">SortedSet</a>{&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;E&quot;} set.lower_bound(&quot;@&quot;) # =&gt; 0 set.lower_bound(&quot;A&quot;) # =&gt; 0 set.lower_bound(&quot;B&quot;) # =&gt; 1 set.lower_bound(&quot;C&quot;) # =&gt; 2 set.lower_bound(&quot;D&quot;) # =&gt; 3 set.lower_bound(&quot;E&quot;) # =&gt; 3 set.lower_bound(&quot;F&quot;) # =&gt; 4 set.lower_bound(&quot;Z&quot;) # =&gt; 4</code></p>","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object) : Int32","args_html":"(object) : Int32","location":{"filename":"src/avltree/sorted_set.cr","line_number":272,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L272"},"def":{"name":"lower_bound","args":[{"name":"object","external_name":"object","restriction":""}],"return_type":"Int32","visibility":"Public","body":"@map.lower_bound(object)"}},{"html_id":"max-instance-method","name":"max","doc":"Returns the element with the maximum value in the collection.\n\nIt compares using `>` so it will work for any type that supports that method.\n\n```\n[1, 2, 3].max        # => 3\n[\"Alice\", \"Bob\"].max # => \"Bob\"\n```\n\nRaises `Enumerable::EmptyError` if the collection is empty.","summary":"<p>Returns the element with the maximum value in the collection.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_set.cr","line_number":104,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L104"},"def":{"name":"max","visibility":"Public","body":"last"}},{"html_id":"max?-instance-method","name":"max?","doc":"Like `max` but returns `nil` if the collection is empty.","summary":"<p>Like <code><a href=\"../AVLTree/SortedSet.html#max-instance-method\">#max</a></code> but returns <code>nil</code> if the collection is empty.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_set.cr","line_number":108,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L108"},"def":{"name":"max?","visibility":"Public","body":"last?"}},{"html_id":"min-instance-method","name":"min","doc":"Returns the element with the minimum value in the collection.\n\nIt compares using `<` so it will work for any type that supports that method.\n\n```\n[1, 2, 3].min        # => 1\n[\"Alice\", \"Bob\"].min # => \"Alice\"\n```\n\nRaises `Enumerable::EmptyError` if the collection is empty.","summary":"<p>Returns the element with the minimum value in the collection.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_set.cr","line_number":96,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L96"},"def":{"name":"min","visibility":"Public","body":"first"}},{"html_id":"min?-instance-method","name":"min?","doc":"Like `min` but returns `nil` if the collection is empty.","summary":"<p>Like <code><a href=\"../AVLTree/SortedSet.html#min-instance-method\">#min</a></code> but returns <code>nil</code> if the collection is empty.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_set.cr","line_number":100,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L100"},"def":{"name":"min?","visibility":"Public","body":"first?"}},{"html_id":"object_id-instance-method","name":"object_id","abstract":false,"location":{"filename":"src/avltree/sorted_set.cr","line_number":447,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L447"},"def":{"name":"object_id","visibility":"Public","body":"@map.object_id"}},{"html_id":"pop:T-instance-method","name":"pop","abstract":false,"location":{"filename":"src/avltree/sorted_set.cr","line_number":209,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L209"},"def":{"name":"pop","return_type":"T","visibility":"Public","body":"pop do\n  raise(IndexError.new)\nend"}},{"html_id":"pop(&)-instance-method","name":"pop","abstract":false,"location":{"filename":"src/avltree/sorted_set.cr","line_number":213,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L213"},"def":{"name":"pop","yields":0,"block_arity":0,"visibility":"Public","body":"object = last?\nif object\n  delete(object)\n  object\nelse\n  yield\nend\n"}},{"html_id":"pop?:T|Nil-instance-method","name":"pop?","abstract":false,"location":{"filename":"src/avltree/sorted_set.cr","line_number":223,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L223"},"def":{"name":"pop?","return_type":"T | ::Nil","visibility":"Public","body":"pop do\n  nil\nend"}},{"html_id":"pretty_print(pp):Nil-instance-method","name":"pretty_print","abstract":false,"args":[{"name":"pp","external_name":"pp","restriction":""}],"args_string":"(pp) : Nil","args_html":"(pp) : Nil","location":{"filename":"src/avltree/sorted_set.cr","line_number":409,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L409"},"def":{"name":"pretty_print","args":[{"name":"pp","external_name":"pp","restriction":""}],"return_type":"Nil","visibility":"Public","body":"pp.list(\"SortedSet{\", self, \"}\")"}},{"html_id":"proper_subset_of?(other:SortedSet)-instance-method","name":"proper_subset_of?","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"SortedSet"}],"args_string":"(other : SortedSet)","args_html":"(other : <a href=\"../AVLTree/SortedSet.html\">SortedSet</a>)","location":{"filename":"src/avltree/sorted_set.cr","line_number":434,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L434"},"def":{"name":"proper_subset_of?","args":[{"name":"other","external_name":"other","restriction":"SortedSet"}],"visibility":"Public","body":"if other.size <= size\n  return false\nend\nall? do |value|\n  other.includes?(value)\nend\n"}},{"html_id":"proper_superset_of?(other:SortedSet)-instance-method","name":"proper_superset_of?","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"SortedSet"}],"args_string":"(other : SortedSet)","args_html":"(other : <a href=\"../AVLTree/SortedSet.html\">SortedSet</a>)","location":{"filename":"src/avltree/sorted_set.cr","line_number":443,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L443"},"def":{"name":"proper_superset_of?","args":[{"name":"other","external_name":"other","restriction":"SortedSet"}],"visibility":"Public","body":"other.proper_subset_of?(self)"}},{"html_id":"same?(other:SortedSet)-instance-method","name":"same?","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"SortedSet"}],"args_string":"(other : SortedSet)","args_html":"(other : <a href=\"../AVLTree/SortedSet.html\">SortedSet</a>)","location":{"filename":"src/avltree/sorted_set.cr","line_number":451,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L451"},"def":{"name":"same?","args":[{"name":"other","external_name":"other","restriction":"SortedSet"}],"visibility":"Public","body":"@map.same?(other.@map)"}},{"html_id":"shift:T-instance-method","name":"shift","abstract":false,"location":{"filename":"src/avltree/sorted_set.cr","line_number":191,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L191"},"def":{"name":"shift","return_type":"T","visibility":"Public","body":"shift do\n  raise(IndexError.new)\nend"}},{"html_id":"shift(&)-instance-method","name":"shift","abstract":false,"location":{"filename":"src/avltree/sorted_set.cr","line_number":195,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L195"},"def":{"name":"shift","yields":0,"block_arity":0,"visibility":"Public","body":"object = first?\nif object\n  delete(object)\n  object\nelse\n  yield\nend\n"}},{"html_id":"shift?:T|Nil-instance-method","name":"shift?","abstract":false,"location":{"filename":"src/avltree/sorted_set.cr","line_number":205,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L205"},"def":{"name":"shift?","return_type":"T | ::Nil","visibility":"Public","body":"shift do\n  nil\nend"}},{"html_id":"size-instance-method","name":"size","doc":"Returns the number of elements in this container.","summary":"<p>Returns the number of elements in this container.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_set.cr","line_number":227,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L227"},"def":{"name":"size","visibility":"Public","body":"@map.size"}},{"html_id":"subset_of?(other:SortedSet)-instance-method","name":"subset_of?","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"SortedSet"}],"args_string":"(other : SortedSet)","args_html":"(other : <a href=\"../AVLTree/SortedSet.html\">SortedSet</a>)","location":{"filename":"src/avltree/sorted_set.cr","line_number":429,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L429"},"def":{"name":"subset_of?","args":[{"name":"other","external_name":"other","restriction":"SortedSet"}],"visibility":"Public","body":"if other.size < size\n  return false\nend\nall? do |value|\n  other.includes?(value)\nend\n"}},{"html_id":"subtract(other:Enumerable)-instance-method","name":"subtract","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Enumerable"}],"args_string":"(other : Enumerable)","args_html":"(other : <a href=\"../Enumerable.html\">Enumerable</a>)","location":{"filename":"src/avltree/sorted_set.cr","line_number":374,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L374"},"def":{"name":"subtract","args":[{"name":"other","external_name":"other","restriction":"Enumerable"}],"visibility":"Public","body":"other.unordered_each do |value|\n  delete(value)\nend\nself\n"}},{"html_id":"superset_of?(other:SortedSet)-instance-method","name":"superset_of?","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"SortedSet"}],"args_string":"(other : SortedSet)","args_html":"(other : <a href=\"../AVLTree/SortedSet.html\">SortedSet</a>)","location":{"filename":"src/avltree/sorted_set.cr","line_number":439,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L439"},"def":{"name":"superset_of?","args":[{"name":"other","external_name":"other","restriction":"SortedSet"}],"visibility":"Public","body":"other.subset_of?(self)"}},{"html_id":"to_a-instance-method","name":"to_a","doc":"Returns an `Array` with all the elements in the collection.\n\n```\n{1, 2, 3}.to_a # => [1, 2, 3]\n```","summary":"<p>Returns an <code>Array</code> with all the elements in the collection.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_set.cr","line_number":401,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L401"},"def":{"name":"to_a","visibility":"Public","body":"@map.keys"}},{"html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Same as `#inspect(io)`.","summary":"<p>Same as <code><a href=\"../AVLTree/SortedSet.html#inspect%28io%3AIO%29%3ANil-instance-method\">#inspect(io)</a></code>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/avltree/sorted_set.cr","line_number":423,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L423"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"io << \"SortedSet{\"\njoin(io, \", \", &.inspect(io))\nio << '}'\n"}},{"html_id":"unordered_each(&)-instance-method","name":"unordered_each","doc":"Yields each element of the set, and returns self.\n\nIt doesn't guarantee that its elements are yielded in sorted order when iterating over them.","summary":"<p>Yields each element of the set, and returns self.</p>","abstract":false,"location":{"filename":"src/avltree/sorted_set.cr","line_number":253,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L253"},"def":{"name":"unordered_each","yields":1,"block_arity":1,"visibility":"Public","body":"@map.unordered_each do |key, _|\n  yield key\nend\nself\n"}},{"html_id":"unsafe_fetch(index:Int)-instance-method","name":"unsafe_fetch","doc":"Returns the element at the given *index*, without doing any bounds check.\n\n`Indexable` makes sure to invoke this method with *index* in `0...size`,\nso converting negative indices to positive ones is not needed here.\n\nClients never invoke this method directly. Instead, they access\nelements with `#[](index)` and `#[]?(index)`.\n\nThis method should only be directly invoked if you are absolutely\nsure the index is in bounds, to avoid a bounds check for a small boost\nof performance.","summary":"<p>Returns the element at the given <em>index</em>, without doing any bounds check.</p>","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int)","args_html":"(index : Int)","location":{"filename":"src/avltree/sorted_set.cr","line_number":60,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L60"},"def":{"name":"unsafe_fetch","args":[{"name":"index","external_name":"index","restriction":"Int"}],"visibility":"Public","body":"(@map.unsafe_fetch(index))[0]"}},{"html_id":"upper_bound(object):Int32-instance-method","name":"upper_bound","doc":"```\nset = AVLTree::SortedSet(String){\"A\", \"B\", \"B\", \"C\", \"E\"}\nset                  # => SortedSet{\"A\", \"B\", \"C\", \"E\"}\nset.upper_bound(\"@\") # => 0\nset.upper_bound(\"A\") # => 1\nset.upper_bound(\"B\") # => 2\nset.upper_bound(\"C\") # => 3\nset.upper_bound(\"D\") # => 3\nset.upper_bound(\"E\") # => 4\nset.upper_bound(\"F\") # => 4\nset.upper_bound(\"Z\") # => 4\n```","summary":"<p><code>set = <a href=\"../AVLTree/SortedSet.html\">AVLTree::SortedSet</a>(String){&quot;A&quot;, &quot;B&quot;, &quot;B&quot;, &quot;C&quot;, &quot;E&quot;} set # =&gt; <a href=\"../AVLTree/SortedSet.html\">SortedSet</a>{&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;E&quot;} set.upper_bound(&quot;@&quot;) # =&gt; 0 set.upper_bound(&quot;A&quot;) # =&gt; 1 set.upper_bound(&quot;B&quot;) # =&gt; 2 set.upper_bound(&quot;C&quot;) # =&gt; 3 set.upper_bound(&quot;D&quot;) # =&gt; 3 set.upper_bound(&quot;E&quot;) # =&gt; 4 set.upper_bound(&quot;F&quot;) # =&gt; 4 set.upper_bound(&quot;Z&quot;) # =&gt; 4</code></p>","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object) : Int32","args_html":"(object) : Int32","location":{"filename":"src/avltree/sorted_set.cr","line_number":288,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L288"},"def":{"name":"upper_bound","args":[{"name":"object","external_name":"object","restriction":""}],"return_type":"Int32","visibility":"Public","body":"@map.upper_bound(object)"}}]}]},{"html_id":"avltree/Enumerable","path":"Enumerable.html","kind":"module","full_name":"Enumerable(T)","name":"Enumerable","abstract":false,"locations":[{"filename":"src/avltree/sorted_multiset.cr","line_number":432,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L432"},{"filename":"src/avltree/sorted_set.cr","line_number":457,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L457"}],"repository_name":"avltree","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"avltree/AVLTree/SortedMap","kind":"class","full_name":"AVLTree::SortedMap(K, V)","name":"SortedMap"},{"html_id":"avltree/AVLTree/SortedMultimap","kind":"class","full_name":"AVLTree::SortedMultimap(K, V)","name":"SortedMultimap"},{"html_id":"avltree/AVLTree/SortedMultiset","kind":"struct","full_name":"AVLTree::SortedMultiset(T)","name":"SortedMultiset"},{"html_id":"avltree/AVLTree/SortedSet","kind":"struct","full_name":"AVLTree::SortedSet(T)","name":"SortedSet"}],"doc":"The `Enumerable` mixin provides collection classes with several traversal, searching,\nfiltering and querying methods.\n\nIncluding types must provide an `each` method, which yields successive members\nof the collection.\n\nFor example:\n\n```\nclass Three\n  include Enumerable(Int32)\n\n  def each(&)\n    yield 1\n    yield 2\n    yield 3\n  end\nend\n\nthree = Three.new\nthree.to_a                # => [1, 2, 3]\nthree.select &.odd?       # => [1, 3]\nthree.all? { |x| x < 10 } # => true\n```\n\nNote that most search and filter methods traverse an Enumerable eagerly,\nproducing an `Array` as the result. For a lazy alternative refer to\nthe `Iterator` and `Iterable` modules.","summary":"<p>The <code><a href=\"Enumerable.html\">Enumerable</a></code> mixin provides collection classes with several traversal, searching, filtering and querying methods.</p>","instance_methods":[{"html_id":"to_sorted_multiset-instance-method","name":"to_sorted_multiset","abstract":false,"location":{"filename":"src/avltree/sorted_multiset.cr","line_number":433,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_multiset.cr#L433"},"def":{"name":"to_sorted_multiset","visibility":"Public","body":"AVLTree::SortedMultiset.new(self)"}},{"html_id":"to_sorted_set-instance-method","name":"to_sorted_set","abstract":false,"location":{"filename":"src/avltree/sorted_set.cr","line_number":458,"url":"https://github.com/ngng628/avltree/blob/4276b4d5647a2c34b4e5c139836ecfd42234791f/src/avltree/sorted_set.cr#L458"},"def":{"name":"to_sorted_set","visibility":"Public","body":"AVLTree::SortedSet.new(self)"}}]}]}})